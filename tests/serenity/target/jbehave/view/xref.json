{"xref": {
  "stories": [
    {
      "story": {
        "path": "stories/site/Blogs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Blogs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Blogs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Blogs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Blogs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Blogs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Blogs page",
                  "durationInMillis": 3686,
                  "start": 1486394981169,
                  "end": 1486394984855
                },
                {
                  "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40502,
                  "start": 1486394984857,
                  "end": 1486395025359
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 70,
                  "start": 1486395025364,
                  "end": 1486395025434
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395025434,
                  "end": 1486395025435
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/blogs/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Blogs page",
                "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 44573,
        "start": 1486394981112,
        "end": 1486395025685
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Events.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Events Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Events.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Events Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/Events.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Events page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Events page",
                  "durationInMillis": 3461,
                  "start": 1486395025698,
                  "end": 1486395029159
                },
                {
                  "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10289,
                  "start": 1486395029161,
                  "end": 1486395039450
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35,
                  "start": 1486395039451,
                  "end": 1486395039486
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395039486,
                  "end": 1486395039487
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/events/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Events page",
                "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13857,
        "start": 1486395025696,
        "end": 1486395039553
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Home.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Home Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        ],
        "name": "Home.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Home Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2774,
                  "start": 1486395039557,
                  "end": 1486395042331
                },
                {
                  "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20613,
                  "start": 1486395042333,
                  "end": 1486395062946
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 39,
                  "start": 1486395062948,
                  "end": 1486395062987
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395062987,
                  "end": 1486395062988
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for general page elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2976,
                  "start": 1486395063056,
                  "end": 1486395066032
                },
                {
                  "step": "Then check that Twitter's list of events is shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that Twitter's list of events is shown",
                  "durationInMillis": 190,
                  "start": 1486395066033,
                  "end": 1486395066223
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 79,
                  "start": 1486395066224,
                  "end": 1486395066303
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395066303,
                  "end": 1486395066304
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for twitter's list of events",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check that Twitter's list of events is shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Your API Key"
                ],
                [
                  "pageURL",
                  "https://developer-acct.ticketmaster.com/user/login"
                ],
                [
                  "elementLocation",
                  "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3273,
                    "start": 1486395066443,
                    "end": 1486395069716
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                    "durationInMillis": 358,
                    "start": 1486395069717,
                    "end": 1486395070075
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                    "durationInMillis": 1218,
                    "start": 1486395070076,
                    "end": 1486395071294
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Review Documentation"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/getting-started/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3438,
                    "start": 1486395071377,
                    "end": 1486395074815
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                    "durationInMillis": 327,
                    "start": 1486395074817,
                    "end": 1486395075144
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                    "durationInMillis": 853,
                    "start": 1486395075145,
                    "end": 1486395075998
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Explore The API"
                ],
                [
                  "pageURL",
                  "{url}/api-explorer/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3188,
                    "start": 1486395076074,
                    "end": 1486395079262
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                    "durationInMillis": 277,
                    "start": 1486395079264,
                    "end": 1486395079541
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                    "durationInMillis": 1995,
                    "start": 1486395079543,
                    "end": 1486395081538
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Android"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#android-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3539,
                    "start": 1486395081665,
                    "end": 1486395085204
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                    "durationInMillis": 752,
                    "start": 1486395085206,
                    "end": 1486395085958
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                    "durationInMillis": 36,
                    "start": 1486395085959,
                    "end": 1486395085995
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Backend"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#backend-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3104,
                    "start": 1486395086061,
                    "end": 1486395089165
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                    "durationInMillis": 293,
                    "start": 1486395089166,
                    "end": 1486395089459
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                    "durationInMillis": 234,
                    "start": 1486395089460,
                    "end": 1486395089694
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "iOS"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#iOS-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3663,
                    "start": 1486395089765,
                    "end": 1486395093428
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                    "durationInMillis": 497,
                    "start": 1486395093429,
                    "end": 1486395093926
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                    "durationInMillis": 252,
                    "start": 1486395093928,
                    "end": 1486395094180
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Web"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#web-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3210,
                    "start": 1486395094248,
                    "end": 1486395097458
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                    "durationInMillis": 568,
                    "start": 1486395097458,
                    "end": 1486395098026
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                    "durationInMillis": 240,
                    "start": 1486395098028,
                    "end": 1486395098268
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Tech blog"
                ],
                [
                  "pageURL",
                  "https://tech.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//h1[@class='site-title']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3895,
                    "start": 1486395098335,
                    "end": 1486395102230
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                    "durationInMillis": 364,
                    "start": 1486395102233,
                    "end": 1486395102597
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                    "durationInMillis": 3169,
                    "start": 1486395102598,
                    "end": 1486395105767
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Medium Publication"
                ],
                [
                  "pageURL",
                  "https://medium.com/ticketmaster-tech"
                ],
                [
                  "elementLocation",
                  "//h2[text()='Because Engineers are Fans Too!']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3607,
                    "start": 1486395105840,
                    "end": 1486395109447
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                    "durationInMillis": 460,
                    "start": 1486395109448,
                    "end": 1486395109908
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                    "durationInMillis": 8159,
                    "start": 1486395109910,
                    "end": 1486395118069
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Partner API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/partner/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3364,
                    "start": 1486395118143,
                    "end": 1486395121507
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                    "durationInMillis": 2338,
                    "start": 1486395121507,
                    "end": 1486395123845
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                    "durationInMillis": 665,
                    "start": 1486395123847,
                    "end": 1486395124512
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Deals API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/deals-api/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3194,
                    "start": 1486395124608,
                    "end": 1486395127802
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                    "durationInMillis": 280,
                    "start": 1486395127803,
                    "end": 1486395128083
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                    "durationInMillis": 1370,
                    "start": 1486395128085,
                    "end": 1486395129455
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Legacy docs"
                ],
                [
                  "pageURL",
                  "http://apidocs.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//td[@class='WikiLogoName']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3201,
                    "start": 1486395129523,
                    "end": 1486395132724
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                    "durationInMillis": 1775,
                    "start": 1486395132726,
                    "end": 1486395134501
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                    "durationInMillis": 42,
                    "start": 1486395134501,
                    "end": 1486395134543
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 95057,
        "start": 1486395039556,
        "end": 1486395134613
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/OpenSource.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Open Source Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "OpenSource.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Open Source Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/OpenSource.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Open Source"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/"
                ],
                [
                  "pageTitle",
                  "//h1[@id='logo']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3641,
                    "start": 1486395134624,
                    "end": 1486395138265
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                    "durationInMillis": 312,
                    "start": 1486395138266,
                    "end": 1486395138578
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                    "durationInMillis": 300,
                    "start": 1486395138579,
                    "end": 1486395138879
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/blogs/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Open Source"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/"
                      ],
                      [
                        "pageTitle",
                        "//h1[@id='logo']"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4346,
        "start": 1486395134618,
        "end": 1486395138964
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Search.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Search Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Search.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Search Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Search.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "searchRequest",
                  "test"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3959,
                    "start": 1486395138991,
                    "end": 1486395142950
                  },
                  {
                    "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                    "durationInMillis": 385,
                    "start": 1486395142951,
                    "end": 1486395143336
                  },
                  {
                    "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                    "durationInMillis": 22737,
                    "start": 1486395143337,
                    "end": 1486395166074
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/search/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "| searchRequest |\n|      test     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "searchRequest"
                  ],
                  "data": [
                    [
                      [
                        "searchRequest",
                        "test"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "And insert Search Parameter <searchRequest> and navigate to Search page",
                  "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 27181,
        "start": 1486395138968,
        "end": 1486395166149
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/AffiliateID.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "user",
          "iWantTo": "perform an action",
          "soThat": "I can achieve a business goal"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "scenario description",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a system state",
              "When I do something",
              "Then system is in a different state"
            ]
          }
        ],
        "name": "AffiliateID.story"
      },
      "localizedNarrative": "As a user\nI want to perform an action\nSo that I can achieve a business goal",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/CreateNewAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Create New Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page",
              "Then check general page elements for Pantheon Create New Account page"
            ]
          }
        ],
        "name": "CreateNewAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Create New Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page",
              "Then check general page elements for Pantheon Create New Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3062,
                  "start": 1486395166154,
                  "end": 1486395169216
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1470,
                  "start": 1486395169217,
                  "end": 1486395170687
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 1130,
                  "start": 1486395170688,
                  "end": 1486395171818
                },
                {
                  "step": "Then check general page elements for Pantheon Create New Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
                  "durationInMillis": 20314,
                  "start": 1486395171819,
                  "end": 1486395192133
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 47,
                  "start": 1486395192133,
                  "end": 1486395192180
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 3,
                  "start": 1486395192180,
                  "end": 1486395192183
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Create New Account page from LogIn page",
                "Then check general page elements for Pantheon Create New Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 26110,
        "start": 1486395166153,
        "end": 1486395192263
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/EditProfile.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Edit Profile Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          }
        ],
        "name": "EditProfile.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Edit Profile Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          },
          "storyPath": "stories/site/pantheon/EditProfile.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 4008,
                  "start": 1486395192268,
                  "end": 1486395196276
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1311,
                  "start": 1486395196277,
                  "end": 1486395197588
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 6621,
                  "start": 1486395197589,
                  "end": 1486395204210
                },
                {
                  "step": "When navigate to Pantheon Edit Profile page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
                  "durationInMillis": 2820,
                  "start": 1486395204211,
                  "end": 1486395207031
                },
                {
                  "step": "Then check general page elements for Pantheon Edit Profile page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
                  "durationInMillis": 20322,
                  "start": 1486395207032,
                  "end": 1486395227354
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1486395227354,
                  "end": 1486395227392
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395227392,
                  "end": 1486395227392
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "When navigate to Pantheon Edit Profile page from User Account page",
                "Then check general page elements for Pantheon Edit Profile page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 35193,
        "start": 1486395192267,
        "end": 1486395227460
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/RequestNewPassword.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Request New Password Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          }
        ],
        "name": "RequestNewPassword.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Request New Password Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          },
          "storyPath": "stories/site/pantheon/RequestNewPassword.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3003,
                  "start": 1486395227463,
                  "end": 1486395230466
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1214,
                  "start": 1486395230467,
                  "end": 1486395231681
                },
                {
                  "step": "When navigate to Pantheon Request New Password page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
                  "durationInMillis": 539,
                  "start": 1486395231682,
                  "end": 1486395232221
                },
                {
                  "step": "Then check general page elements for Pantheon Request New Password page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
                  "durationInMillis": 20452,
                  "start": 1486395232222,
                  "end": 1486395252674
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 45,
                  "start": 1486395252675,
                  "end": 1486395252720
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395252720,
                  "end": 1486395252721
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Request New Password page from LogIn page",
                "Then check general page elements for Pantheon Request New Password page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 25351,
        "start": 1486395227462,
        "end": 1486395252813
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "debug",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          }
        ],
        "name": "UserAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2701,
                  "start": 1486395252820,
                  "end": 1486395255521
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1036,
                  "start": 1486395255522,
                  "end": 1486395256558
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 7516,
                  "start": 1486395256559,
                  "end": 1486395264075
                },
                {
                  "step": "Then check general page elements for Pantheon User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User Account page",
                  "durationInMillis": 20363,
                  "start": 1486395264076,
                  "end": 1486395284439
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31,
                  "start": 1486395284440,
                  "end": 1486395284471
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395284471,
                  "end": 1486395284472
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": [
                {
                  "@name": "debug",
                  "@value": ""
                }
              ]
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "Then check general page elements for Pantheon User Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 31724,
        "start": 1486395252819,
        "end": 1486395284543
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserApps.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "manage my Apps",
          "asA": "user of Ticket Master Developer portal",
          "iWantTo": "perform CRUD operations with my apps",
          "soThat": ""
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "And navigate to Pantheon LogIn page from Home page",
              "And navigate to Pantheon User Account page from LogIn page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When navigate to Pantheon Add New App page from User Account page",
              "Then check general page elements for Pantheon Add New App page"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app positive",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given And navigate to myApps page",
              "And open Edit App Page for the first application",
              "When change all possible fields on Edit App Page",
              "And apply changes on Edit App Page",
              "And open Edit App Page for the first application",
              "Then all changes have been applied on Edit App Page"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField|\n|App Name     |\n|Redirect URI |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "App Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to myApps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And apply changes on Edit App Page",
              "Then the form-error is appear on field <appFormField>"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App positive [Add New App - App Name field with value]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When complete form with valid values on Add New App Page",
              "And submit form on Add New App Page",
              "Then the \"App Created!\" message is displayed",
              "And the New App is appear in the list of apps"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App negative [Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|requiredField|\n|App Name     |\n|Redirect URI |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "requiredField"
              ],
              "data": [
                [
                  [
                    "requiredField",
                    "App Name"
                  ]
                ],
                [
                  [
                    "requiredField",
                    "Redirect URI"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "And make <requiredField> field empty",
              "When submit form on Add New App Page",
              "Then the form-error is appear on field <requiredField>"
            ]
          },
          {
            "title": "(Pantheon|Delete App) Delete App positive",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When delete predefined app",
              "Then the \"App Deleted!\" message is displayed",
              "And the predefined app is removed from the list of app"
            ]
          }
        ],
        "name": "UserApps.story"
      },
      "localizedNarrative": "In order to manage my Apps\nAs a user of Ticket Master Developer portal\nI want to perform CRUD operations with my apps",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserLogIn.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User LonIn Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "Then check general page elements for Pantheon User LonIn page"
            ]
          }
        ],
        "name": "UserLogIn.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User LonIn Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "Then check general page elements for Pantheon User LonIn page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2915,
                  "start": 1486395284549,
                  "end": 1486395287464
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1147,
                  "start": 1486395287465,
                  "end": 1486395288612
                },
                {
                  "step": "Then check general page elements for Pantheon User LonIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User LonIn page",
                  "durationInMillis": 20289,
                  "start": 1486395288613,
                  "end": 1486395308902
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1486395308903,
                  "end": 1486395308937
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395308937,
                  "end": 1486395308938
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "Then check general page elements for Pantheon User LonIn page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24464,
        "start": 1486395284547,
        "end": 1486395309011
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Partners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/partners/Partners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partners page",
                  "durationInMillis": 3262,
                  "start": 1486395309015,
                  "end": 1486395312277
                },
                {
                  "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20341,
                  "start": 1486395312278,
                  "end": 1486395332619
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 53,
                  "start": 1486395332620,
                  "end": 1486395332673
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395332673,
                  "end": 1486395332674
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partners page",
                "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 23727,
        "start": 1486395309014,
        "end": 1486395332741
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_CertifiedPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Certified Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_CertifiedPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Certified Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Certified Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Certified Partners page",
                  "durationInMillis": 3668,
                  "start": 1486395332745,
                  "end": 1486395336413
                },
                {
                  "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10313,
                  "start": 1486395336414,
                  "end": 1486395346727
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1486395346728,
                  "end": 1486395346753
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395346753,
                  "end": 1486395346754
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Certified Partners page",
                "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 14072,
        "start": 1486395332744,
        "end": 1486395346816
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_DistributionPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Distribution Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_DistributionPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Distribution Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Distribution Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Distribution Partners page",
                  "durationInMillis": 3215,
                  "start": 1486395346821,
                  "end": 1486395350036
                },
                {
                  "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 647,
                  "start": 1486395350037,
                  "end": 1486395350684
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 140,
                  "start": 1486395350685,
                  "end": 1486395350825
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395350825,
                  "end": 1486395350825
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/distribution-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Distribution Partners page",
                "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4073,
        "start": 1486395346819,
        "end": 1486395350892
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_Nexus.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Join The Nexus Program Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_Nexus.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Join The Nexus Program Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_Nexus.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Join The Nexus Program page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Join The Nexus Program page",
                  "durationInMillis": 3711,
                  "start": 1486395350900,
                  "end": 1486395354611
                },
                {
                  "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 641,
                  "start": 1486395354612,
                  "end": 1486395355253
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 36,
                  "start": 1486395355254,
                  "end": 1486395355290
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395355290,
                  "end": 1486395355291
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Join The Nexus Program page",
                "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4462,
        "start": 1486395350895,
        "end": 1486395355357
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_StartupsDevelopers.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Startups and Developers Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_StartupsDevelopers.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Startups and Developers Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Startups and Developers page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Startups and Developers page",
                  "durationInMillis": 4221,
                  "start": 1486395355360,
                  "end": 1486395359581
                },
                {
                  "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 631,
                  "start": 1486395359582,
                  "end": 1486395360213
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 55,
                  "start": 1486395360214,
                  "end": 1486395360269
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395360269,
                  "end": 1486395360269
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/startups-and-developers/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Startups and Developers page",
                "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4978,
        "start": 1486395355359,
        "end": 1486395360337
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Products and Docs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "PD.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Products and Docs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Products and Docs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Products and Docs page",
                  "durationInMillis": 2732,
                  "start": 1486395360341,
                  "end": 1486395363073
                },
                {
                  "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40609,
                  "start": 1486395363074,
                  "end": 1486395403683
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 44,
                  "start": 1486395403683,
                  "end": 1486395403727
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395403727,
                  "end": 1486395403728
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Products and Docs page",
                "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 43468,
        "start": 1486395360340,
        "end": 1486395403808
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_APIExplorer.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 5496,
                  "start": 1486395403831,
                  "end": 1486395409327
                },
                {
                  "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 11420,
                  "start": 1486395409328,
                  "end": 1486395420748
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32,
                  "start": 1486395420749,
                  "end": 1486395420781
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395420781,
                  "end": 1486395420782
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 17042,
        "start": 1486395403830,
        "end": 1486395420872
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page V2 of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/v2) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_APIExplorer_V2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page V2 of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/v2) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer V2 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer V2 page",
                  "durationInMillis": 3886,
                  "start": 1486395420876,
                  "end": 1486395424762
                },
                {
                  "step": "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for API Explorer V2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 11204,
                  "start": 1486395424763,
                  "end": 1486395435967
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 36,
                  "start": 1486395435968,
                  "end": 1486395436004
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395436004,
                  "end": 1486395436004
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/v2) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer V2 page",
                "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 15211,
        "start": 1486395420875,
        "end": 1486395436086
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_ChangeLog.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test ChangeLog Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_ChangeLog.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test ChangeLog Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open ChangeLog page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open ChangeLog page",
                  "durationInMillis": 3493,
                  "start": 1486395436090,
                  "end": 1486395439583
                },
                {
                  "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 902,
                  "start": 1486395439585,
                  "end": 1486395440487
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 54,
                  "start": 1486395440488,
                  "end": 1486395440542
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395440542,
                  "end": 1486395440543
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open ChangeLog page",
                "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4528,
        "start": 1486395436089,
        "end": 1486395440617
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_CommerceAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Commerce API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_CommerceAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Commerce API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 5678,
                  "start": 1486395440625,
                  "end": 1486395446303
                },
                {
                  "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1323,
                  "start": 1486395446305,
                  "end": 1486395447628
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1486395447629,
                  "end": 1486395447652
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395447652,
                  "end": 1486395447652
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 7147,
        "start": 1486395440622,
        "end": 1486395447769
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DealsAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Deals API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DealsAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Deals API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Deals API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Deals API page",
                  "durationInMillis": 4360,
                  "start": 1486395447776,
                  "end": 1486395452136
                },
                {
                  "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 816,
                  "start": 1486395452137,
                  "end": 1486395452953
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43,
                  "start": 1486395452953,
                  "end": 1486395452996
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 2,
                  "start": 1486395452996,
                  "end": 1486395452998
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Deals API page",
                "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5297,
        "start": 1486395447773,
        "end": 1486395453070
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v1 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV1.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v1 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v1 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v1 page",
                  "durationInMillis": 4839,
                  "start": 1486395453075,
                  "end": 1486395457914
                },
                {
                  "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 938,
                  "start": 1486395457915,
                  "end": 1486395458853
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1486395458854,
                  "end": 1486395458883
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395458883,
                  "end": 1486395458884
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v1 page",
                "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5880,
        "start": 1486395453074,
        "end": 1486395458954
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v2 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v2 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v2 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v2 page",
                  "durationInMillis": 6641,
                  "start": 1486395458958,
                  "end": 1486395465599
                },
                {
                  "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 2752,
                  "start": 1486395465600,
                  "end": 1486395468352
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 42,
                  "start": 1486395468353,
                  "end": 1486395468395
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395468395,
                  "end": 1486395468396
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v2 page",
                "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 9503,
        "start": 1486395458957,
        "end": 1486395468460
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_GettingStarted.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Getting Started Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_GettingStarted.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Getting Started Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 4971,
                  "start": 1486395468463,
                  "end": 1486395473434
                },
                {
                  "step": "When Commerce API menu has list of methods",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When Commerce API menu has list of methods",
                  "durationInMillis": 128458,
                  "start": 1486395473435,
                  "end": 1486395601893
                },
                {
                  "step": "And open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And open Getting Started page",
                  "durationInMillis": 2247,
                  "start": 1486395601895,
                  "end": 1486395604142
                },
                {
                  "step": "Then all the Commerce API methods are shown on Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
                  "durationInMillis": 53918,
                  "start": 1486395604143,
                  "end": 1486395658061
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 833,
                  "start": 1486395658062,
                  "end": 1486395658895
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395658895,
                  "end": 1486395658895
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "When Commerce API menu has list of methods",
                "And open Getting Started page",
                "Then all the Commerce API methods are shown on Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 3353,
                  "start": 1486395658964,
                  "end": 1486395662317
                },
                {
                  "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 989,
                  "start": 1486395662318,
                  "end": 1486395663307
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33,
                  "start": 1486395663308,
                  "end": 1486395663341
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395663341,
                  "end": 1486395663342
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 194949,
        "start": 1486395468462,
        "end": 1486395663411
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InteractiveAPIConsole.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Interactive API Console Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/interactive-console/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "Then check general page elements for Interactive API Console Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_InteractiveAPIConsole.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Interactive API Console Page of Ticket Master Developer's site",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test International Discovery API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InternationalDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test International Discovery API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open International Discovery API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open International Discovery API page",
                  "durationInMillis": 6326,
                  "start": 1486395663416,
                  "end": 1486395669742
                },
                {
                  "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 2154,
                  "start": 1486395669743,
                  "end": 1486395671897
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 41,
                  "start": 1486395671897,
                  "end": 1486395671938
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395671938,
                  "end": 1486395671939
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open International Discovery API page",
                "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 8599,
        "start": 1486395663415,
        "end": 1486395672014
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Inventory Status API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InventoryStatusAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Inventory Status API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Inventory Status API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Inventory Status API page",
                  "durationInMillis": 4056,
                  "start": 1486395672018,
                  "end": 1486395676074
                },
                {
                  "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 918,
                  "start": 1486395676074,
                  "end": 1486395676992
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 75,
                  "start": 1486395676992,
                  "end": 1486395677067
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395677067,
                  "end": 1486395677068
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Inventory Status API page",
                "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5121,
        "start": 1486395672017,
        "end": 1486395677138
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_OauthAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Oauth API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_OauthAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Oauth API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Oauth API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Oauth API page",
                  "durationInMillis": 3545,
                  "start": 1486395677142,
                  "end": 1486395680687
                },
                {
                  "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 996,
                  "start": 1486395680689,
                  "end": 1486395681685
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28,
                  "start": 1486395681685,
                  "end": 1486395681713
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395681713,
                  "end": 1486395681714
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Oauth API page",
                "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4636,
        "start": 1486395677141,
        "end": 1486395681777
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PartnerAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PartnerAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API page",
                  "durationInMillis": 4860,
                  "start": 1486395681782,
                  "end": 1486395686642
                },
                {
                  "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 959,
                  "start": 1486395686643,
                  "end": 1486395687602
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32,
                  "start": 1486395687603,
                  "end": 1486395687635
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395687635,
                  "end": 1486395687635
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API page",
                "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5930,
        "start": 1486395681781,
        "end": 1486395687711
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PublishAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Publish API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PublishAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Publish API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Publish API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Publish API page",
                  "durationInMillis": 4408,
                  "start": 1486395687716,
                  "end": 1486395692124
                },
                {
                  "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1033,
                  "start": 1486395692125,
                  "end": 1486395693158
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 47,
                  "start": 1486395693158,
                  "end": 1486395693205
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395693205,
                  "end": 1486395693205
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Publish API page",
                "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5588,
        "start": 1486395687715,
        "end": 1486395693303
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SDKs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test SDK-s Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_SDKs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test SDK-s Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open SDKs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open SDKs page",
                  "durationInMillis": 3756,
                  "start": 1486395693306,
                  "end": 1486395697062
                },
                {
                  "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 933,
                  "start": 1486395697063,
                  "end": 1486395697996
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 42,
                  "start": 1486395697997,
                  "end": 1486395698039
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395698039,
                  "end": 1486395698040
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/sdks/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open SDKs page",
                "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Java Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-java"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 3717,
                    "start": 1486395698113,
                    "end": 1486395701830
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                    "durationInMillis": 1593,
                    "start": 1486395701831,
                    "end": 1486395703424
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1224,
                    "start": 1486395703425,
                    "end": 1486395704649
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-JavaScript Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-javascript"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 3838,
                    "start": 1486395704712,
                    "end": 1486395708550
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "When check visibility and click <elementKey> element of SDKs page",
                      "cause": {
                        "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                        "detailMessage": "org.openqa.selenium.WebDriverException: Element is not clickable at point (801.4833374023438, 417). Other element would receive the click: <img src=\"/assets/img/products-and-docs/sdk-js-logo.png\" alt=\"\"> (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 12 milliseconds\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-c4c14acc-7b83-4c64-901d-1cde511c15c7', ip: '172.17.0.15', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=31.0, platform=LINUX, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]\nSession ID: 4a3a48e3-ecf2-4541-9231-4fef4073282c",
                        "cause": {
                          "@class": "org.openqa.selenium.WebDriverException",
                          "@defined-in": "java.lang.Throwable",
                          "detailMessage": "Element is not clickable at point (801.4833374023438, 417). Other element would receive the click: <img src=\"/assets/img/products-and-docs/sdk-js-logo.png\" alt=\"\"> (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 12 milliseconds",
                          "stackTrace": [
                            "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
                            "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
                            "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
                            "java.lang.reflect.Constructor.newInstance(Constructor.java:408)",
                            "org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)",
                            "org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)",
                            "org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)",
                            "org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35)",
                            "org.openqa.selenium.remote.RemoteMouse.click(RemoteMouse.java:59)",
                            "org.openqa.selenium.interactions.ClickAction.perform(ClickAction.java:37)",
                            "org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:50)",
                            "bla.tm.steps.products_and_docs.PD_SDKsSteps.validateAndClickElement(PD_SDKsSteps.java:37)",
                            "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.CGLIB$validateAndClickElement$3(<generated>)",
                            "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd$$FastClassByCGLIB$$a9117abf.invoke(<generated>)",
                            "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                            "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                            "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                            "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                            "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                            "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                            "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.validateAndClickElement(<generated>)",
                            "bla.tm.definitions.site.products_and_docs.PD_SDKsDefinition.checkIfElementVisibleAndClickIt(PD_SDKsDefinition.java:27)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                            "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                            "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                            "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                            "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                            "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                            "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                            "java.lang.Thread.run(Thread.java:745)"
                          ],
                          "suppressedExceptions": [
                            [],
                            []
                          ],
                          "extraInfo": [
                            [
                              "Driver info",
                              "org.openqa.selenium.firefox.FirefoxDriver"
                            ],
                            [
                              "Capabilities",
                              "Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=31.0, platform=LINUX, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]"
                            ],
                            [
                              "Session ID",
                              "4a3a48e3-ecf2-4541-9231-4fef4073282c"
                            ]
                          ]
                        },
                        "stackTrace": [
                          "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.validateAndClickElement(<generated>)",
                          "bla.tm.definitions.site.products_and_docs.PD_SDKsDefinition.checkIfElementVisibleAndClickIt(PD_SDKsDefinition.java:27)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "detailedMessage": "Element is not clickable at point (801.4833374023438, 417). Other element would receive the click: <img src=\"/assets/img/products-and-docs/sdk-js-logo.png\" alt=\"\"> (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 12 milliseconds\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-c4c14acc-7b83-4c64-901d-1cde511c15c7', ip: '172.17.0.15', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=31.0, platform=LINUX, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]\nSession ID: 4a3a48e3-ecf2-4541-9231-4fef4073282c",
                        "stackTrace": [
                          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
                          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
                          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
                          "java.lang.reflect.Constructor.newInstance(Constructor.java:408)",
                          "org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)",
                          "org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)",
                          "org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)",
                          "org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35)",
                          "org.openqa.selenium.remote.RemoteMouse.click(RemoteMouse.java:59)",
                          "org.openqa.selenium.interactions.ClickAction.perform(ClickAction.java:37)",
                          "org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:50)",
                          "bla.tm.steps.products_and_docs.PD_SDKsSteps.validateAndClickElement(PD_SDKsSteps.java:37)",
                          "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.CGLIB$validateAndClickElement$3(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd$$FastClassByCGLIB$$a9117abf.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.validateAndClickElement(<generated>)",
                          "bla.tm.definitions.site.products_and_docs.PD_SDKsDefinition.checkIfElementVisibleAndClickIt(PD_SDKsDefinition.java:27)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "exceptionClass": "org.openqa.selenium.WebDriverException"
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "d0ead946-2bfe-4261-9d7f-26c62b9d9a84"
                    },
                    "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                    "durationInMillis": 1914,
                    "start": 1486395708551,
                    "end": 1486395710465
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Scala Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-scala"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 3404,
                    "start": 1486395710553,
                    "end": 1486395713957
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                    "durationInMillis": 1589,
                    "start": 1486395713958,
                    "end": 1486395715547
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1141,
                    "start": 1486395715548,
                    "end": 1486395716689
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 23581,
        "start": 1486395693305,
        "end": 1486395716886
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Season Ticketing API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_SeasonTicketingAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Season Ticketing API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Season Ticketing API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Season Ticketing API page",
                  "durationInMillis": 3378,
                  "start": 1486395716892,
                  "end": 1486395720270
                },
                {
                  "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 884,
                  "start": 1486395720271,
                  "end": 1486395721155
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1486395721156,
                  "end": 1486395721194
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395721194,
                  "end": 1486395721194
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Season Ticketing API page",
                "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4399,
        "start": 1486395716891,
        "end": 1486395721290
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_TopPicksAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Top Picks API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_TopPicksAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Top Picks API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Top Picks API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Top Picks API page",
                  "durationInMillis": 4059,
                  "start": 1486395721296,
                  "end": 1486395725355
                },
                {
                  "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 762,
                  "start": 1486395725355,
                  "end": 1486395726117
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1486395726118,
                  "end": 1486395726142
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395726142,
                  "end": 1486395726142
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Top Picks API page",
                "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4911,
        "start": 1486395721294,
        "end": 1486395726205
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials page",
                  "durationInMillis": 2762,
                  "start": 1486395726208,
                  "end": 1486395728970
                },
                {
                  "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10266,
                  "start": 1486395728971,
                  "end": 1486395739237
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33,
                  "start": 1486395739238,
                  "end": 1486395739271
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395739271,
                  "end": 1486395739272
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials page",
                "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2572,
                    "start": 1486395739340,
                    "end": 1486395741912
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                    "durationInMillis": 1728,
                    "start": 1486395741913,
                    "end": 1486395743641
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 611,
                    "start": 1486395743643,
                    "end": 1486395744254
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2238,
                    "start": 1486395744320,
                    "end": 1486395746558
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 2044,
                    "start": 1486395746559,
                    "end": 1486395748603
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 47,
                    "start": 1486395748603,
                    "end": 1486395748650
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2689,
                    "start": 1486395748713,
                    "end": 1486395751402
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 801,
                    "start": 1486395751403,
                    "end": 1486395752204
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 934,
                    "start": 1486395752205,
                    "end": 1486395753139
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2303,
                    "start": 1486395753453,
                    "end": 1486395755756
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                    "durationInMillis": 804,
                    "start": 1486395755757,
                    "end": 1486395756561
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 736,
                    "start": 1486395756561,
                    "end": 1486395757297
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2713,
                    "start": 1486395757362,
                    "end": 1486395760075
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 770,
                    "start": 1486395760076,
                    "end": 1486395760846
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 813,
                    "start": 1486395760847,
                    "end": 1486395761660
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2354,
                    "start": 1486395761727,
                    "end": 1486395764081
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 851,
                    "start": 1486395764082,
                    "end": 1486395764933
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 1023,
                    "start": 1486395764935,
                    "end": 1486395765958
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2192,
                    "start": 1486395766217,
                    "end": 1486395768409
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                    "durationInMillis": 2128,
                    "start": 1486395768410,
                    "end": 1486395770538
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 504,
                    "start": 1486395770540,
                    "end": 1486395771044
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2486,
                    "start": 1486395771110,
                    "end": 1486395773596
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 801,
                    "start": 1486395773600,
                    "end": 1486395774401
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 1762,
                    "start": 1486395774402,
                    "end": 1486395776164
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2971,
                    "start": 1486395776237,
                    "end": 1486395779208
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 773,
                    "start": 1486395779210,
                    "end": 1486395779983
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 1961,
                    "start": 1486395779984,
                    "end": 1486395781945
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 55855,
        "start": 1486395726208,
        "end": 1486395782063
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch page",
                  "durationInMillis": 2108,
                  "start": 1486395782071,
                  "end": 1486395784179
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10311,
                  "start": 1486395784181,
                  "end": 1486395794492
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 36,
                  "start": 1486395794493,
                  "end": 1486395794529
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395794529,
                  "end": 1486395794529
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch page",
                "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2987,
                    "start": 1486395794597,
                    "end": 1486395797584
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 734,
                    "start": 1486395797585,
                    "end": 1486395798319
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 1440,
                    "start": 1486395798321,
                    "end": 1486395799761
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2842,
                    "start": 1486395799826,
                    "end": 1486395802668
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 773,
                    "start": 1486395802668,
                    "end": 1486395803441
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 851,
                    "start": 1486395803442,
                    "end": 1486395804293
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2014,
                    "start": 1486395804354,
                    "end": 1486395806368
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1667,
                    "start": 1486395806369,
                    "end": 1486395808036
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 408,
                    "start": 1486395808037,
                    "end": 1486395808445
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2872,
                    "start": 1486395808510,
                    "end": 1486395811382
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1828,
                    "start": 1486395811383,
                    "end": 1486395813211
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 556,
                    "start": 1486395813212,
                    "end": 1486395813768
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2116,
                    "start": 1486395813908,
                    "end": 1486395816024
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1787,
                    "start": 1486395816025,
                    "end": 1486395817812
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 710,
                    "start": 1486395817813,
                    "end": 1486395818523
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2556,
                    "start": 1486395818694,
                    "end": 1486395821250
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1888,
                    "start": 1486395821251,
                    "end": 1486395823139
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 680,
                    "start": 1486395823140,
                    "end": 1486395823820
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 41821,
        "start": 1486395782069,
        "end": 1486395823890
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventInSomeLocation.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "durationInMillis": 3342,
                  "start": 1486395823893,
                  "end": 1486395827235
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 753,
                  "start": 1486395827236,
                  "end": 1486395827989
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1486395827989,
                  "end": 1486395828009
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395828009,
                  "end": 1486395828010
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4185,
        "start": 1486395823892,
        "end": 1486395828077
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "durationInMillis": 3268,
                  "start": 1486395828083,
                  "end": 1486395831351
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 500,
                  "start": 1486395831352,
                  "end": 1486395831852
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1486395831853,
                  "end": 1486395831877
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395831877,
                  "end": 1486395831877
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3862,
        "start": 1486395828081,
        "end": 1486395831943
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 2490,
                  "start": 1486395831947,
                  "end": 1486395834437
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10221,
                  "start": 1486395834439,
                  "end": 1486395844660
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1486395844664,
                  "end": 1486395844698
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395844698,
                  "end": 1486395844699
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 2617,
                    "start": 1486395844768,
                    "end": 1486395847385
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                    "durationInMillis": 1094,
                    "start": 1486395847386,
                    "end": 1486395848480
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 382,
                    "start": 1486395848481,
                    "end": 1486395848863
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1962,
                    "start": 1486395848927,
                    "end": 1486395850889
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 1056,
                    "start": 1486395850890,
                    "end": 1486395851946
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 438,
                    "start": 1486395851947,
                    "end": 1486395852385
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 2344,
                    "start": 1486395852517,
                    "end": 1486395854861
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 927,
                    "start": 1486395854862,
                    "end": 1486395855789
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 570,
                    "start": 1486395855790,
                    "end": 1486395856360
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24481,
        "start": 1486395831946,
        "end": 1486395856427
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets_EventDiscoveryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "durationInMillis": 2860,
                  "start": 1486395856431,
                  "end": 1486395859291
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 515,
                  "start": 1486395859292,
                  "end": 1486395859807
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35,
                  "start": 1486395859807,
                  "end": 1486395859842
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395859842,
                  "end": 1486395859842
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets EventDiscoveryWidget page",
                "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3477,
        "start": 1486395856431,
        "end": 1486395859908
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Calendar.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Calendar Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Calendar.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Calendar Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2856,
                  "start": 1486395859913,
                  "end": 1486395862769
                },
                {
                  "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 824,
                  "start": 1486395862770,
                  "end": 1486395863594
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 244,
                  "start": 1486395863595,
                  "end": 1486395863839
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395863839,
                  "end": 1486395863840
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3990,
        "start": 1486395859912,
        "end": 1486395863902
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Countdown.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Countdown Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Countdown.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Countdown Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3952,
                  "start": 1486395863905,
                  "end": 1486395867857
                },
                {
                  "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 622,
                  "start": 1486395867858,
                  "end": 1486395868480
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1486395868480,
                  "end": 1486395868501
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395868501,
                  "end": 1486395868502
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4660,
        "start": 1486395863905,
        "end": 1486395868565
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Event Discovery Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_EventDiscovery.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Event Discovery Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 5037,
                  "start": 1486395868567,
                  "end": 1486395873604
                },
                {
                  "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 573,
                  "start": 1486395873605,
                  "end": 1486395874178
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 30,
                  "start": 1486395874178,
                  "end": 1486395874208
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395874208,
                  "end": 1486395874209
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5708,
        "start": 1486395868566,
        "end": 1486395874274
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Universal Checkout Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_UniversalCheckout.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Universal Checkout Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Universal Checkout page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Universal Checkout page",
                  "durationInMillis": 4255,
                  "start": 1486395874277,
                  "end": 1486395878532
                },
                {
                  "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 535,
                  "start": 1486395878532,
                  "end": 1486395879067
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1486395879068,
                  "end": 1486395879088
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395879088,
                  "end": 1486395879088
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Universal Checkout page",
                "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4875,
        "start": 1486395874276,
        "end": 1486395879151
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_WordPress.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test WordPress Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_WordPress.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test WordPress Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open WordPress Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open WordPress Widget page",
                  "durationInMillis": 4688,
                  "start": 1486395879154,
                  "end": 1486395883842
                },
                {
                  "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 174,
                  "start": 1486395883842,
                  "end": 1486395884016
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 30,
                  "start": 1486395884017,
                  "end": 1486395884047
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395884047,
                  "end": 1486395884048
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open WordPress Widget page",
                "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4958,
        "start": 1486395879153,
        "end": 1486395884111
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 3528,
                  "start": 1486395884114,
                  "end": 1486395887642
                },
                {
                  "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10206,
                  "start": 1486395887643,
                  "end": 1486395897849
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1486395897850,
                  "end": 1486395897872
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395897872,
                  "end": 1486395897872
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 2194,
                  "start": 1486395897934,
                  "end": 1486395900128
                },
                {
                  "step": "When check visibility and click DirectPaymentButton element of Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
                  "durationInMillis": 807,
                  "start": 1486395900129,
                  "end": 1486395900936
                },
                {
                  "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "durationInMillis": 945,
                  "start": 1486395900936,
                  "end": 1486395901881
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1486395901882,
                  "end": 1486395901906
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395901906,
                  "end": 1486395901906
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "When check visibility and click DirectPaymentButton element of Widgets page",
                "Then check that new page opened from Direct Payment Button has has appropriate url"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Checkout Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/checkout/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 2092,
                    "start": 1486395901970,
                    "end": 1486395904062
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                    "durationInMillis": 2212,
                    "start": 1486395904063,
                    "end": 1486395906275
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                    "durationInMillis": 103,
                    "start": 1486395906276,
                    "end": 1486395906379
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/event-discovery/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 2180,
                    "start": 1486395906472,
                    "end": 1486395908652
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                    "durationInMillis": 4363,
                    "start": 1486395908653,
                    "end": 1486395913016
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                    "durationInMillis": 175,
                    "start": 1486395913017,
                    "end": 1486395913192
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Countdown Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/countdown/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 4185,
                    "start": 1486395913268,
                    "end": 1486395917453
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                    "durationInMillis": 2704,
                    "start": 1486395917454,
                    "end": 1486395920158
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                    "durationInMillis": 55,
                    "start": 1486395920158,
                    "end": 1486395920213
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Calendar Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/calendar/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 3664,
                    "start": 1486395920282,
                    "end": 1486395923946
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                    "durationInMillis": 2812,
                    "start": 1486395923947,
                    "end": 1486395926759
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                    "durationInMillis": 226,
                    "start": 1486395926760,
                    "end": 1486395926986
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "WordPress Widget Learn Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/wordpress/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 2377,
                    "start": 1486395927048,
                    "end": 1486395929425
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                    "durationInMillis": 1921,
                    "start": 1486395929425,
                    "end": 1486395931346
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                    "durationInMillis": 449,
                    "start": 1486395931348,
                    "end": 1486395931797
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 47765,
        "start": 1486395884113,
        "end": 1486395931878
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Support Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Support Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Support page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Support page",
                  "durationInMillis": 3624,
                  "start": 1486395931881,
                  "end": 1486395935505
                },
                {
                  "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 283,
                  "start": 1486395935506,
                  "end": 1486395935789
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1486395935790,
                  "end": 1486395935814
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395935814,
                  "end": 1486395935815
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Support page",
                "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3998,
        "start": 1486395931880,
        "end": 1486395935878
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_BrandingGuide.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Branding Guide Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_BrandingGuide.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Branding Guide Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_BrandingGuide.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Branding Guide page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Branding Guide page",
                  "durationInMillis": 2908,
                  "start": 1486395935881,
                  "end": 1486395938789
                },
                {
                  "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 552,
                  "start": 1486395938790,
                  "end": 1486395939342
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1486395939342,
                  "end": 1486395939371
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395939371,
                  "end": 1486395939372
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/branding-guide/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Branding Guide page",
                "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3557,
        "start": 1486395935880,
        "end": 1486395939437
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_ContactUs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Contact Us Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_ContactUs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Contact Us Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_ContactUs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Contact Us page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Contact Us page",
                  "durationInMillis": 2942,
                  "start": 1486395939442,
                  "end": 1486395942384
                },
                {
                  "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10229,
                  "start": 1486395942385,
                  "end": 1486395952614
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1486395952614,
                  "end": 1486395952638
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395952638,
                  "end": 1486395952639
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/contact-us/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Contact Us page",
                "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13267,
        "start": 1486395939441,
        "end": 1486395952708
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_FAQ.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test FAQ Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_FAQ.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test FAQ Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_FAQ.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open FAQ page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open FAQ page",
                  "durationInMillis": 4687,
                  "start": 1486395952712,
                  "end": 1486395957399
                },
                {
                  "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 501,
                  "start": 1486395957400,
                  "end": 1486395957901
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1486395957902,
                  "end": 1486395957921
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395957921,
                  "end": 1486395957921
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/faq/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open FAQ page",
                "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5271,
        "start": 1486395952712,
        "end": 1486395957983
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_GeneralTermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test General Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_GeneralTermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test General Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open General Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open General Terms Of Use page",
                  "durationInMillis": 2767,
                  "start": 1486395957985,
                  "end": 1486395960752
                },
                {
                  "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 467,
                  "start": 1486395960753,
                  "end": 1486395961220
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32,
                  "start": 1486395961220,
                  "end": 1486395961252
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395961252,
                  "end": 1486395961252
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open General Terms Of Use page",
                "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3329,
        "start": 1486395957985,
        "end": 1486395961314
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_PartnerAPITermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_PartnerAPITermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API Terms Of Use page",
                  "durationInMillis": 3133,
                  "start": 1486395961325,
                  "end": 1486395964458
                },
                {
                  "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 533,
                  "start": 1486395964459,
                  "end": 1486395964992
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 64,
                  "start": 1486395964993,
                  "end": 1486395965057
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395965057,
                  "end": 1486395965058
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API Terms Of Use page",
                "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3796,
        "start": 1486395961324,
        "end": 1486395965120
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementNegative.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Commerce API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When User is logged to site (Commerce API)",
              "Then check that API key is provided for all placeholders on Commerce API page"
            ]
          },
          {
            "title": "(APi Key - Top Picks API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "When User is logged to site (Top Picks API)",
              "Then check that API key is provided for all placeholders on Top Picks API page"
            ]
          },
          {
            "title": "(APi Key - Season Ticketing API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "When User is logged to site (Season Ticketing API)",
              "Then check that API key is provided for all placeholders on Season Ticketing API page"
            ]
          },
          {
            "title": "(APi Key - International Discovery API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "When User is logged to site (International Discovery API)",
              "Then check that API key is provided for all placeholders on International Discovery API page"
            ]
          },
          {
            "title": "(APi Key - Publish API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "When User is logged to site (Publish API)",
              "Then check that API key is provided for all placeholders on Publish API page"
            ]
          },
          {
            "title": "(APi Key - Deals API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "When User is logged to site (Deals API)",
              "Then check that API key is provided for all placeholders on Deals API page"
            ]
          },
          {
            "title": "(APi Key - Partner API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "When User is logged to site (Partner API)",
              "Then check that API key is provided for all placeholders on Partner API page"
            ]
          },
          {
            "title": "(APi Key - Inventory Status API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "When User is logged to site (Inventory Status API)",
              "Then check that API key is provided for all placeholder on Inventory Status API page"
            ]
          }
        ],
        "name": "APIKeyReplacementNegative.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementPositive.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is not logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is not logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is not logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is not logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is not logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is not logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is not logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          }
        ],
        "name": "APIKeyReplacementPositive.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CalendarWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Calendar Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,zipCode",
              "And store values of: apiKey,keyword,zipCode",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values of fields: apiKey,keyword,zipCode equals stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CalendarWidget.story"
      },
      "localizedNarrative": "In order to setup Calendar Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2767,
                  "start": 1486395965123,
                  "end": 1486395967890
                },
                {
                  "step": "Then the required fields are not empty on the Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
                  "durationInMillis": 423,
                  "start": 1486395967891,
                  "end": 1486395968314
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 57,
                  "start": 1486395968314,
                  "end": 1486395968371
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395968371,
                  "end": 1486395968372
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then the required fields are not empty on the Calendar Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,zipCode",
              "And store values of: apiKey,keyword,zipCode",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 4024,
                  "start": 1486395968438,
                  "end": 1486395972462
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2391,
                  "start": 1486395972463,
                  "end": 1486395974854
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 186,
                  "start": 1486395974855,
                  "end": 1486395975041
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 867,
                  "start": 1486395975042,
                  "end": 1486395975909
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1506,
                  "start": 1486395975910,
                  "end": 1486395977416
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 311,
                  "start": 1486395977416,
                  "end": 1486395977727
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27,
                  "start": 1486395977728,
                  "end": 1486395977755
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486395977755,
                  "end": 1486395977755
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And change values for: apiKey,keyword,zipCode",
                "And store values of: apiKey,keyword,zipCode",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "zipCode",
                  "01000"
                ],
                [
                  "countryName",
                  "France"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Calendar Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Calendar Widget page",
                    "durationInMillis": 2967,
                    "start": 1486395977825,
                    "end": 1486395980792
                  },
                  {
                    "step": "When change value of Zip Code <zipCode>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of Zip Code ｟01000｠",
                    "durationInMillis": 2167,
                    "start": 1486395980793,
                    "end": 1486395982960
                  },
                  {
                    "step": "Then the Country field contains appropriate value <countryName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country field contains appropriate value ｟France｠",
                    "durationInMillis": 73,
                    "start": 1486395982961,
                    "end": 1486395983034
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "01000"
                      ],
                      [
                        "countryName",
                        "France"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "K1P 1J1"
                      ],
                      [
                        "countryName",
                        "Canada"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Calendar Widget page",
                  "When change value of Zip Code <zipCode>",
                  "Then the Country field contains appropriate value <countryName>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "zipCode",
                  "K1P 1J1"
                ],
                [
                  "countryName",
                  "Canada"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Calendar Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Calendar Widget page",
                    "durationInMillis": 3938,
                    "start": 1486395983097,
                    "end": 1486395987035
                  },
                  {
                    "step": "When change value of Zip Code <zipCode>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of Zip Code ｟K1P 1J1｠",
                    "durationInMillis": 2047,
                    "start": 1486395987036,
                    "end": 1486395989083
                  },
                  {
                    "step": "Then the Country field contains appropriate value <countryName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country field contains appropriate value ｟Canada｠",
                    "durationInMillis": 60,
                    "start": 1486395989084,
                    "end": 1486395989144
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "01000"
                      ],
                      [
                        "countryName",
                        "France"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "K1P 1J1"
                      ],
                      [
                        "countryName",
                        "Canada"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Calendar Widget page",
                  "When change value of Zip Code <zipCode>",
                  "Then the Country field contains appropriate value <countryName>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values of fields: apiKey,keyword,zipCode equals stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 4912,
                  "start": 1486395989213,
                  "end": 1486395994125
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 617,
                  "start": 1486395994127,
                  "end": 1486395994744
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2167,
                  "start": 1486395994744,
                  "end": 1486395996911
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 2737,
                  "start": 1486395996912,
                  "end": 1486395999649
                },
                {
                  "step": "Then values of fields: apiKey,keyword,zipCode equals stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values of fields: ｟apiKey,keyword,zipCode｠ equals stored values",
                  "durationInMillis": 215,
                  "start": 1486395999650,
                  "end": 1486395999865
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31,
                  "start": 1486395999866,
                  "end": 1486395999897
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486395999897,
                  "end": 1486395999898
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,zipCode",
                "And change values for: apiKey,keyword,zipCode",
                "When click reset button",
                "Then values of fields: apiKey,keyword,zipCode equals stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3480,
                  "start": 1486395999965,
                  "end": 1486396003445
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 698,
                  "start": 1486396003446,
                  "end": 1486396004144
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2212,
                  "start": 1486396004145,
                  "end": 1486396006357
                },
                {
                  "step": "When click reset button on Calendar Widget Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button on Calendar Widget Page",
                  "durationInMillis": 667,
                  "start": 1486396006359,
                  "end": 1486396007026
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 786,
                  "start": 1486396007027,
                  "end": 1486396007813
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1381,
                  "start": 1486396007814,
                  "end": 1486396009195
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 287,
                  "start": 1486396009196,
                  "end": 1486396009483
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33,
                  "start": 1486396009484,
                  "end": 1486396009517
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396009517,
                  "end": 1486396009517
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,zipCode",
                "And change values for: apiKey,keyword,zipCode",
                "When click reset button on Calendar Widget Page",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3303,
                  "start": 1486396009584,
                  "end": 1486396012887
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 870,
                  "start": 1486396012888,
                  "end": 1486396013758
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 934,
                  "start": 1486396013759,
                  "end": 1486396014693
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 143,
                  "start": 1486396014694,
                  "end": 1486396014837
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396014837,
                  "end": 1486396014838
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3730,
                  "start": 1486396014908,
                  "end": 1486396018638
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 457,
                  "start": 1486396018640,
                  "end": 1486396019097
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 1449,
                  "start": 1486396019098,
                  "end": 1486396020547
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1486396020547,
                  "end": 1486396020585
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396020585,
                  "end": 1486396020586
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 55536,
        "start": 1486395965122,
        "end": 1486396020658
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CountdownWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Countdown Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "And get eventId by keyword ADELE",
              "And set first eventId from list",
              "Then the event poster contains ADELE"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CountdownWidget.story"
      },
      "localizedNarrative": "In order to setup Countdown Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4555,
                  "start": 1486396020660,
                  "end": 1486396025215
                },
                {
                  "step": "Then the required fields are not empty on the Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
                  "durationInMillis": 299,
                  "start": 1486396025216,
                  "end": 1486396025515
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1486396025516,
                  "end": 1486396025545
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396025545,
                  "end": 1486396025546
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then the required fields are not empty on the Countdown Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 5570,
                  "start": 1486396025612,
                  "end": 1486396031182
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 123,
                  "start": 1486396031182,
                  "end": 1486396031305
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 792,
                  "start": 1486396031305,
                  "end": 1486396032097
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1956,
                  "start": 1486396032098,
                  "end": 1486396034054
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 138,
                  "start": 1486396034054,
                  "end": 1486396034192
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1486396034193,
                  "end": 1486396034214
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396034214,
                  "end": 1486396034214
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3691,
                  "start": 1486396034278,
                  "end": 1486396037969
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 961,
                  "start": 1486396037969,
                  "end": 1486396038930
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 109,
                  "start": 1486396038931,
                  "end": 1486396039040
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 753,
                  "start": 1486396039041,
                  "end": 1486396039794
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1365,
                  "start": 1486396039795,
                  "end": 1486396041160
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 159,
                  "start": 1486396041161,
                  "end": 1486396041320
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1486396041321,
                  "end": 1486396041343
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396041343,
                  "end": 1486396041344
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3172,
                  "start": 1486396041411,
                  "end": 1486396044583
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 395,
                  "start": 1486396044584,
                  "end": 1486396044979
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 548,
                  "start": 1486396044979,
                  "end": 1486396045527
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 111,
                  "start": 1486396045528,
                  "end": 1486396045639
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 2808,
                  "start": 1486396045641,
                  "end": 1486396048449
                },
                {
                  "step": "Then the ApiKey and EventId fields have stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
                  "durationInMillis": 101,
                  "start": 1486396048449,
                  "end": 1486396048550
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35,
                  "start": 1486396048550,
                  "end": 1486396048585
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396048585,
                  "end": 1486396048586
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "Then the ApiKey and EventId fields have stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 5937,
                  "start": 1486396048655,
                  "end": 1486396054592
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 365,
                  "start": 1486396054593,
                  "end": 1486396054958
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 613,
                  "start": 1486396054959,
                  "end": 1486396055572
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 117,
                  "start": 1486396055573,
                  "end": 1486396055690
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 2881,
                  "start": 1486396055691,
                  "end": 1486396058572
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 874,
                  "start": 1486396058573,
                  "end": 1486396059447
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2025,
                  "start": 1486396059448,
                  "end": 1486396061473
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 225,
                  "start": 1486396061474,
                  "end": 1486396061699
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43,
                  "start": 1486396061699,
                  "end": 1486396061742
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396061742,
                  "end": 1486396061743
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "And get eventId by keyword ADELE",
              "And set first eventId from list",
              "Then the event poster contains ADELE"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4718,
                  "start": 1486396061813,
                  "end": 1486396066531
                },
                {
                  "step": "When User is logged to site (Countdown Widget)",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When User is logged to site (Countdown Widget)",
                  "durationInMillis": 9892,
                  "start": 1486396066532,
                  "end": 1486396076424
                },
                {
                  "step": "And get eventId by keyword ADELE",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And get eventId by keyword ｟ADELE｠",
                  "durationInMillis": 1655,
                  "start": 1486396076425,
                  "end": 1486396078080
                },
                {
                  "step": "And set first eventId from list",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set first eventId from list",
                  "durationInMillis": 1198,
                  "start": 1486396078081,
                  "end": 1486396079279
                },
                {
                  "step": "Then the event poster contains ADELE",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event poster contains ｟ADELE｠",
                  "durationInMillis": 375,
                  "start": 1486396079280,
                  "end": 1486396079655
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32,
                  "start": 1486396079656,
                  "end": 1486396079688
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396079689,
                  "end": 1486396079689
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When User is logged to site (Countdown Widget)",
                "And get eventId by keyword ADELE",
                "And set first eventId from list",
                "Then the event poster contains ADELE"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4591,
                  "start": 1486396079759,
                  "end": 1486396084350
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 579,
                  "start": 1486396084351,
                  "end": 1486396084930
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 1007,
                  "start": 1486396084931,
                  "end": 1486396085938
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 49,
                  "start": 1486396085939,
                  "end": 1486396085988
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396085988,
                  "end": 1486396085988
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4193,
                  "start": 1486396086065,
                  "end": 1486396090258
                },
                {
                  "step": "And switch to VISUAL Tab",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And switch to VISUAL Tab",
                  "durationInMillis": 896,
                  "start": 1486396090259,
                  "end": 1486396091155
                },
                {
                  "step": "And set theme to full-width",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set theme to full-width",
                  "durationInMillis": 580,
                  "start": 1486396091156,
                  "end": 1486396091736
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 1293,
                  "start": 1486396091738,
                  "end": 1486396093031
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1498,
                  "start": 1486396093032,
                  "end": 1486396094530
                },
                {
                  "step": "And embedded html code contains stored theme",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored theme",
                  "durationInMillis": 205,
                  "start": 1486396094531,
                  "end": 1486396094736
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 37,
                  "start": 1486396094736,
                  "end": 1486396094773
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396094773,
                  "end": 1486396094774
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And switch to VISUAL Tab",
                "And set theme to full-width",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored theme"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 3971,
                    "start": 1486396094853,
                    "end": 1486396098824
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1114,
                    "start": 1486396098826,
                    "end": 1486396099940
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 366,
                    "start": 1486396099941,
                    "end": 1486396100307
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 842,
                    "start": 1486396100312,
                    "end": 1486396101154
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1159,
                    "start": 1486396101155,
                    "end": 1486396102314
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1417,
                    "start": 1486396102314,
                    "end": 1486396103731
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 369,
                    "start": 1486396103732,
                    "end": 1486396104101
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 3729,
                    "start": 1486396104173,
                    "end": 1486396107902
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1315,
                    "start": 1486396107903,
                    "end": 1486396109218
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 809,
                    "start": 1486396109219,
                    "end": 1486396110028
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 893,
                    "start": 1486396110030,
                    "end": 1486396110923
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1051,
                    "start": 1486396110925,
                    "end": 1486396111976
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2055,
                    "start": 1486396111977,
                    "end": 1486396114032
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 225,
                    "start": 1486396114033,
                    "end": 1486396114258
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 4420,
                    "start": 1486396114328,
                    "end": 1486396118748
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1008,
                    "start": 1486396118749,
                    "end": 1486396119757
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 594,
                    "start": 1486396119758,
                    "end": 1486396120352
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 798,
                    "start": 1486396120353,
                    "end": 1486396121151
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 772,
                    "start": 1486396121152,
                    "end": 1486396121924
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1479,
                    "start": 1486396121925,
                    "end": 1486396123404
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 77,
                    "start": 1486396123405,
                    "end": 1486396123482
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 4051,
                    "start": 1486396123551,
                    "end": 1486396127602
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1037,
                    "start": 1486396127603,
                    "end": 1486396128640
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 452,
                    "start": 1486396128641,
                    "end": 1486396129093
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 926,
                    "start": 1486396129094,
                    "end": 1486396130020
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1044,
                    "start": 1486396130021,
                    "end": 1486396131065
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1383,
                    "start": 1486396131066,
                    "end": 1486396132449
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 105,
                    "start": 1486396132451,
                    "end": 1486396132556
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 5080,
                    "start": 1486396132627,
                    "end": 1486396137707
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 957,
                    "start": 1486396137708,
                    "end": 1486396138665
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 438,
                    "start": 1486396138666,
                    "end": 1486396139104
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 786,
                    "start": 1486396139105,
                    "end": 1486396139891
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 922,
                    "start": 1486396139892,
                    "end": 1486396140814
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1348,
                    "start": 1486396140815,
                    "end": 1486396142163
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 84,
                    "start": 1486396142164,
                    "end": 1486396142248
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3663,
                  "start": 1486396142315,
                  "end": 1486396145978
                },
                {
                  "step": "And enter custom ApiKey {InvalidApiKey123}",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
                  "durationInMillis": 593,
                  "start": 1486396145980,
                  "end": 1486396146573
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 134,
                  "start": 1486396146574,
                  "end": 1486396146708
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 389,
                  "start": 1486396146709,
                  "end": 1486396147098
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1486396147099,
                  "end": 1486396147123
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396147123,
                  "end": 1486396147124
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom ApiKey {InvalidApiKey123}",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 5122,
                  "start": 1486396147187,
                  "end": 1486396152309
                },
                {
                  "step": "And enter custom EventId \"invalidEventId123\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
                  "durationInMillis": 420,
                  "start": 1486396152311,
                  "end": 1486396152731
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 87,
                  "start": 1486396152732,
                  "end": 1486396152819
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 505,
                  "start": 1486396152820,
                  "end": 1486396153325
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26,
                  "start": 1486396153326,
                  "end": 1486396153352
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396153352,
                  "end": 1486396153353
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom EventId \"invalidEventId123\"",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 132758,
        "start": 1486396020660,
        "end": 1486396153418
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Event Discovery Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiKey |keyWord|zipCode|city |attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York |333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiKey",
                "keyWord",
                "zipCode",
                "city",
                "attractionId",
                "venueId",
                "promoterId",
                "source",
                "countryCode",
                "classificationName",
                "eventCount"
              ],
              "data": [
                [
                  [
                    "apiKey",
                    "apikeys"
                  ],
                  [
                    "keyWord",
                    "adele"
                  ],
                  [
                    "zipCode",
                    "90015"
                  ],
                  [
                    "city",
                    "York"
                  ],
                  [
                    "attractionId",
                    "333444"
                  ],
                  [
                    "venueId",
                    "222111"
                  ],
                  [
                    "promoterId",
                    "9999"
                  ],
                  [
                    "source",
                    "ticketmaster"
                  ],
                  [
                    "countryCode",
                    "Canada"
                  ],
                  [
                    "classificationName",
                    "movies"
                  ],
                  [
                    "eventCount",
                    "50"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          }
        ],
        "name": "EventDiscoveryWidget.story"
      },
      "localizedNarrative": "In order to setup Event Discovery Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 4359,
                  "start": 1486396153422,
                  "end": 1486396157781
                },
                {
                  "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "durationInMillis": 319,
                  "start": 1486396157781,
                  "end": 1486396158100
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1486396158101,
                  "end": 1486396158126
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396158126,
                  "end": 1486396158127
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then the required fields are not empty and have default values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiKey |keyWord|zipCode|city |attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York |333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiKey",
                "keyWord",
                "zipCode",
                "city",
                "attractionId",
                "venueId",
                "promoterId",
                "source",
                "countryCode",
                "classificationName",
                "eventCount"
              ],
              "data": [
                [
                  [
                    "apiKey",
                    "apikeys"
                  ],
                  [
                    "keyWord",
                    "adele"
                  ],
                  [
                    "zipCode",
                    "90015"
                  ],
                  [
                    "city",
                    "York"
                  ],
                  [
                    "attractionId",
                    "333444"
                  ],
                  [
                    "venueId",
                    "222111"
                  ],
                  [
                    "promoterId",
                    "9999"
                  ],
                  [
                    "source",
                    "ticketmaster"
                  ],
                  [
                    "countryCode",
                    "Canada"
                  ],
                  [
                    "classificationName",
                    "movies"
                  ],
                  [
                    "eventCount",
                    "50"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "apiKey",
                  "apikeys"
                ],
                [
                  "keyWord",
                  "adele"
                ],
                [
                  "zipCode",
                  "90015"
                ],
                [
                  "city",
                  "York"
                ],
                [
                  "attractionId",
                  "333444"
                ],
                [
                  "venueId",
                  "222111"
                ],
                [
                  "promoterId",
                  "9999"
                ],
                [
                  "source",
                  "ticketmaster"
                ],
                [
                  "countryCode",
                  "Canada"
                ],
                [
                  "classificationName",
                  "movies"
                ],
                [
                  "eventCount",
                  "50"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5540,
                    "start": 1486396158194,
                    "end": 1486396163734
                  },
                  {
                    "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                    "durationInMillis": 7514,
                    "start": 1486396163734,
                    "end": 1486396171248
                  },
                  {
                    "step": "And store all fields values on the Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                    "durationInMillis": 560,
                    "start": 1486396171253,
                    "end": 1486396171813
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 893,
                    "start": 1486396171814,
                    "end": 1486396172707
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1470,
                    "start": 1486396172708,
                    "end": 1486396174178
                  },
                  {
                    "step": "And embedded html code contains stored values on the Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
                    "durationInMillis": 1130,
                    "start": 1486396174179,
                    "end": 1486396175309
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiKey |keyWord|zipCode|city |attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York |333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiKey",
                    "keyWord",
                    "zipCode",
                    "city",
                    "attractionId",
                    "venueId",
                    "promoterId",
                    "source",
                    "countryCode",
                    "classificationName",
                    "eventCount"
                  ],
                  "data": [
                    [
                      [
                        "apiKey",
                        "apikeys"
                      ],
                      [
                        "keyWord",
                        "adele"
                      ],
                      [
                        "zipCode",
                        "90015"
                      ],
                      [
                        "city",
                        "York"
                      ],
                      [
                        "attractionId",
                        "333444"
                      ],
                      [
                        "venueId",
                        "222111"
                      ],
                      [
                        "promoterId",
                        "9999"
                      ],
                      [
                        "source",
                        "ticketmaster"
                      ],
                      [
                        "countryCode",
                        "Canada"
                      ],
                      [
                        "classificationName",
                        "movies"
                      ],
                      [
                        "eventCount",
                        "50"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "And store all fields values on the Event Discovery Widget page",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored values on the Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "zipCode",
                  "NW1"
                ],
                [
                  "countryName",
                  "United Kingdom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5000,
                    "start": 1486396175384,
                    "end": 1486396180384
                  },
                  {
                    "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟NW1｠ on Event Discovery Widget Page",
                    "durationInMillis": 999,
                    "start": 1486396180385,
                    "end": 1486396181384
                  },
                  {
                    "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country Field contains appropriate value ｟United Kingdom｠ on Event Discovery Widget Page",
                    "durationInMillis": 1546,
                    "start": 1486396181385,
                    "end": 1486396182931
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "NW1"
                      ],
                      [
                        "countryName",
                        "United Kingdom"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "40104"
                      ],
                      [
                        "countryName",
                        "United States"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                  "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "zipCode",
                  "40104"
                ],
                [
                  "countryName",
                  "United States"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4441,
                    "start": 1486396182998,
                    "end": 1486396187439
                  },
                  {
                    "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟40104｠ on Event Discovery Widget Page",
                    "durationInMillis": 968,
                    "start": 1486396187440,
                    "end": 1486396188408
                  },
                  {
                    "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country Field contains appropriate value ｟United States｠ on Event Discovery Widget Page",
                    "durationInMillis": 1557,
                    "start": 1486396188409,
                    "end": 1486396189966
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "NW1"
                      ],
                      [
                        "countryName",
                        "United Kingdom"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "40104"
                      ],
                      [
                        "countryName",
                        "United States"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                  "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "keyword",
                  "ADELE"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5344,
                    "start": 1486396190032,
                    "end": 1486396195376
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 300,
                    "start": 1486396195377,
                    "end": 1486396195677
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 2500,
                    "start": 1486396195677,
                    "end": 1486396198177
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "keyword",
                  "STING"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4838,
                    "start": 1486396198245,
                    "end": 1486396203083
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 513,
                    "start": 1486396203084,
                    "end": 1486396203597
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "Then found events contains <keyword> on Event Discovery Widget page",
                      "cause": {
                        "@class": "java.lang.AssertionError",
                        "detailMessage": "Poster windows does not contains STING, but has next text: NO LONGER ON SALE FOR WEB",
                        "stackTrace": [
                          "org.junit.Assert.fail(Assert.java:88)",
                          "org.junit.Assert.assertTrue(Assert.java:41)",
                          "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps.checkThatFoundEventsContainsText(PD_Widget_EventDiscoverySteps.java:79)",
                          "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps$$EnhancerByCGLIB$$d6591bd9.CGLIB$checkThatFoundEventsContainsText$9(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps$$EnhancerByCGLIB$$d6591bd9$$FastClassByCGLIB$$1d5c1876.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps$$EnhancerByCGLIB$$d6591bd9.checkThatFoundEventsContainsText(<generated>)",
                          "bla.tm.definitions.site.widgets.EventDiscoveryWidgetDefinition.checkThatFoundEventsContainsText(EventDiscoveryWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ]
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "1b430eff-7244-4073-b81e-ed838a557ed4"
                    },
                    "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 3922,
                    "start": 1486396203598,
                    "end": 1486396207520
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "FAILED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4396,
                    "start": 1486396208093,
                    "end": 1486396212489
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 3040,
                    "start": 1486396212490,
                    "end": 1486396215530
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                    "durationInMillis": 49,
                    "start": 1486396215531,
                    "end": 1486396215580
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4283,
                    "start": 1486396215645,
                    "end": 1486396219928
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 3047,
                    "start": 1486396219929,
                    "end": 1486396222976
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                    "durationInMillis": 1285,
                    "start": 1486396222977,
                    "end": 1486396224262
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            }
          ],
          "status": "NOT_PERFORMED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6942,
                    "start": 1486396224333,
                    "end": 1486396231275
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 2693,
                    "start": 1486396231276,
                    "end": 1486396233969
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 69,
                    "start": 1486396233970,
                    "end": 1486396234039
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6127,
                    "start": 1486396234102,
                    "end": 1486396240229
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 2584,
                    "start": 1486396240230,
                    "end": 1486396242814
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 82,
                    "start": 1486396242815,
                    "end": 1486396242897
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 3987,
                    "start": 1486396242961,
                    "end": 1486396246948
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2635,
                    "start": 1486396246949,
                    "end": 1486396249584
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 639,
                    "start": 1486396249586,
                    "end": 1486396250225
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "101"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5015,
                    "start": 1486396250293,
                    "end": 1486396255308
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                    "durationInMillis": 2748,
                    "start": 1486396255308,
                    "end": 1486396258056
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 772,
                    "start": 1486396258057,
                    "end": 1486396258829
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "setValue",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4797,
                    "start": 1486396258899,
                    "end": 1486396263696
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 993,
                    "start": 1486396263696,
                    "end": 1486396264689
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 745,
                    "start": 1486396264690,
                    "end": 1486396265435
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 73,
                    "start": 1486396265435,
                    "end": 1486396265508
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 3992,
                    "start": 1486396265574,
                    "end": 1486396269566
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1110,
                    "start": 1486396269567,
                    "end": 1486396270677
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 679,
                    "start": 1486396270678,
                    "end": 1486396271357
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 99,
                    "start": 1486396271357,
                    "end": 1486396271456
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "19999"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5016,
                    "start": 1486396271523,
                    "end": 1486396276539
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1089,
                    "start": 1486396276540,
                    "end": 1486396277629
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 658,
                    "start": 1486396277630,
                    "end": 1486396278288
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 66,
                    "start": 1486396278288,
                    "end": 1486396278354
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "20000"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5048,
                    "start": 1486396278421,
                    "end": 1486396283469
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 999,
                    "start": 1486396283470,
                    "end": 1486396284469
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟20000｠ on Event Discovery Widget page",
                    "durationInMillis": 796,
                    "start": 1486396284470,
                    "end": 1486396285266
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 63,
                    "start": 1486396285267,
                    "end": 1486396285330
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 3691,
                  "start": 1486396285402,
                  "end": 1486396289093
                },
                {
                  "step": "And store all fields values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                  "durationInMillis": 746,
                  "start": 1486396289094,
                  "end": 1486396289840
                },
                {
                  "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                  "durationInMillis": 5823,
                  "start": 1486396289840,
                  "end": 1486396295663
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 2824,
                  "start": 1486396295666,
                  "end": 1486396298490
                },
                {
                  "step": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
                  "durationInMillis": 423,
                  "start": 1486396298491,
                  "end": 1486396298914
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1486396298915,
                  "end": 1486396298938
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396298938,
                  "end": 1486396298939
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "And store all fields values on the Event Discovery Widget page",
                "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                "When click reset button",
                "Then all fields have been reseted to defaults on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 5923,
                  "start": 1486396299007,
                  "end": 1486396304930
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 230,
                  "start": 1486396304931,
                  "end": 1486396305161
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 617,
                  "start": 1486396305161,
                  "end": 1486396305778
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1486396305778,
                  "end": 1486396305803
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396305803,
                  "end": 1486396305803
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5319,
                    "start": 1486396305870,
                    "end": 1486396311189
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 762,
                    "start": 1486396311189,
                    "end": 1486396311951
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 508,
                    "start": 1486396311952,
                    "end": 1486396312460
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 742,
                    "start": 1486396312461,
                    "end": 1486396313203
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 879,
                    "start": 1486396313203,
                    "end": 1486396314082
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1418,
                    "start": 1486396314082,
                    "end": 1486396315500
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 218,
                    "start": 1486396315501,
                    "end": 1486396315719
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4744,
                    "start": 1486396315784,
                    "end": 1486396320528
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 729,
                    "start": 1486396320528,
                    "end": 1486396321257
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 379,
                    "start": 1486396321258,
                    "end": 1486396321637
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 710,
                    "start": 1486396321637,
                    "end": 1486396322347
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1364,
                    "start": 1486396322348,
                    "end": 1486396323712
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1306,
                    "start": 1486396323712,
                    "end": 1486396325018
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 146,
                    "start": 1486396325018,
                    "end": 1486396325164
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 3634,
                    "start": 1486396325230,
                    "end": 1486396328864
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 949,
                    "start": 1486396328865,
                    "end": 1486396329814
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 478,
                    "start": 1486396329815,
                    "end": 1486396330293
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 684,
                    "start": 1486396330293,
                    "end": 1486396330977
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 774,
                    "start": 1486396330978,
                    "end": 1486396331752
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1330,
                    "start": 1486396331752,
                    "end": 1486396333082
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 57,
                    "start": 1486396333083,
                    "end": 1486396333140
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4805,
                    "start": 1486396333206,
                    "end": 1486396338011
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 764,
                    "start": 1486396338012,
                    "end": 1486396338776
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 380,
                    "start": 1486396338777,
                    "end": 1486396339157
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 718,
                    "start": 1486396339158,
                    "end": 1486396339876
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 885,
                    "start": 1486396339877,
                    "end": 1486396340762
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1385,
                    "start": 1486396340763,
                    "end": 1486396342148
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 81,
                    "start": 1486396342148,
                    "end": 1486396342229
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6387,
                    "start": 1486396342293,
                    "end": 1486396348680
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 905,
                    "start": 1486396348681,
                    "end": 1486396349586
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 401,
                    "start": 1486396349587,
                    "end": 1486396349988
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 693,
                    "start": 1486396349989,
                    "end": 1486396350682
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1045,
                    "start": 1486396350682,
                    "end": 1486396351727
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1376,
                    "start": 1486396351728,
                    "end": 1486396353104
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 129,
                    "start": 1486396353105,
                    "end": 1486396353234
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 3259,
                  "start": 1486396353306,
                  "end": 1486396356565
                },
                {
                  "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
                  "durationInMillis": 589,
                  "start": 1486396356566,
                  "end": 1486396357155
                },
                {
                  "step": "Then the event message is shown \"Here other options for you.\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
                  "durationInMillis": 1001,
                  "start": 1486396357156,
                  "end": 1486396358157
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1486396358158,
                  "end": 1486396358183
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396358183,
                  "end": 1486396358183
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                "Then the event message is shown \"Here other options for you.\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 204827,
        "start": 1486396153421,
        "end": 1486396358248
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/FeedbackWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "send feedback",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the feedback widget\nand have ability to send feedback form to support",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          }
        ],
        "name": "FeedbackWidget.story"
      },
      "localizedNarrative": "In order to send feedback\nAs a user of Ticketmaster Developer Portal\nI want to use the feedback widget\nand have ability to send feedback form to support",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1694,
                  "start": 1486396358252,
                  "end": 1486396359946
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And Feedback widget is not shown",
                  "durationInMillis": 569,
                  "start": 1486396359946,
                  "end": 1486396360515
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 80,
                  "start": 1486396360516,
                  "end": 1486396360596
                },
                {
                  "step": "Then Feedback widget elements are shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Feedback widget elements are shown",
                  "durationInMillis": 990,
                  "start": 1486396360597,
                  "end": 1486396361587
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1486396361587,
                  "end": 1486396361609
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396361609,
                  "end": 1486396361610
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Check that Feedback widget Elements are shown",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And Feedback widget is not shown",
                "When click Feedback button of Tutorials Widgets page",
                "Then Feedback widget elements are shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 2099,
                  "start": 1486396361672,
                  "end": 1486396363771
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 130,
                  "start": 1486396363772,
                  "end": 1486396363902
                },
                {
                  "step": "Then click close button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then click close button of Feedback widget",
                  "durationInMillis": 456,
                  "start": 1486396363903,
                  "end": 1486396364359
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And Feedback widget is not shown",
                  "durationInMillis": 519,
                  "start": 1486396364360,
                  "end": 1486396364879
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1486396364879,
                  "end": 1486396364898
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396364898,
                  "end": 1486396364899
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget Close button",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "When click Feedback button of Tutorials Widgets page",
                "Then click close button of Feedback widget",
                "And Feedback widget is not shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1976,
                  "start": 1486396364961,
                  "end": 1486396366937
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 123,
                  "start": 1486396366937,
                  "end": 1486396367060
                },
                {
                  "step": "When all fields except Name are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Name are populated",
                  "durationInMillis": 427,
                  "start": 1486396367061,
                  "end": 1486396367488
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click send button of Feedback widget",
                  "durationInMillis": 96,
                  "start": 1486396367489,
                  "end": 1486396367585
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then error notification is shown for Feedback widget",
                  "durationInMillis": 26,
                  "start": 1486396367585,
                  "end": 1486396367611
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1486396367612,
                  "end": 1486396367632
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396367632,
                  "end": 1486396367632
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for NAME field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Name are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1971,
                  "start": 1486396367696,
                  "end": 1486396369667
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 133,
                  "start": 1486396369668,
                  "end": 1486396369801
                },
                {
                  "step": "When all fields except Email are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Email are populated",
                  "durationInMillis": 538,
                  "start": 1486396369802,
                  "end": 1486396370340
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click send button of Feedback widget",
                  "durationInMillis": 107,
                  "start": 1486396370341,
                  "end": 1486396370448
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then error notification is shown for Feedback widget",
                  "durationInMillis": 36,
                  "start": 1486396370449,
                  "end": 1486396370485
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1486396370485,
                  "end": 1486396370523
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396370523,
                  "end": 1486396370524
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for Email field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Email are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 12337,
        "start": 1486396358252,
        "end": 1486396370589
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/MapWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Map Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "Then the required fields are not empty on the Map Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Map Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Map Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values equals to stored values of fields: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "MapWidget.story"
      },
      "localizedNarrative": "In order to setup Map Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "Then the required fields are not empty on the Map Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 5055,
                  "start": 1486396370593,
                  "end": 1486396375648
                },
                {
                  "step": "Then the required fields are not empty on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Map Widget page",
                  "durationInMillis": 158,
                  "start": 1486396375648,
                  "end": 1486396375806
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27,
                  "start": 1486396375807,
                  "end": 1486396375834
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396375834,
                  "end": 1486396375835
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "Then the required fields are not empty on the Map Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Map Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Map Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4130,
                  "start": 1486396375900,
                  "end": 1486396380030
                },
                {
                  "step": "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change all possible fields on the Map Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                  "durationInMillis": 6291,
                  "start": 1486396380031,
                  "end": 1486396386322
                },
                {
                  "step": "And store all fields values on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Map Widget page",
                  "durationInMillis": 448,
                  "start": 1486396386324,
                  "end": 1486396386772
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 754,
                  "start": 1486396386773,
                  "end": 1486396387527
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1371,
                  "start": 1486396387528,
                  "end": 1486396388899
                },
                {
                  "step": "And embedded html code contains stored values on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values on the Map Widget page",
                  "durationInMillis": 662,
                  "start": 1486396388899,
                  "end": 1486396389561
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1486396389561,
                  "end": 1486396389584
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396389584,
                  "end": 1486396389585
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                "And store all fields values on the Map Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values on the Map Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values equals to stored values of fields: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4058,
                  "start": 1486396389648,
                  "end": 1486396393706
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 303,
                  "start": 1486396393707,
                  "end": 1486396394010
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2246,
                  "start": 1486396394011,
                  "end": 1486396396257
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 2707,
                  "start": 1486396396258,
                  "end": 1486396398965
                },
                {
                  "step": "Then values equals to stored values of fields: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values equals to stored values of fields: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 108,
                  "start": 1486396398966,
                  "end": 1486396399074
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1486396399075,
                  "end": 1486396399109
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396399109,
                  "end": 1486396399110
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And store values of: apiKey,keyword,zipCode",
                "And change values for: apiKey,keyword,zipCode",
                "When click reset button",
                "Then values equals to stored values of fields: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values of: apiKey,keyword,zipCode",
              "And change values for: apiKey,keyword,zipCode",
              "When click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4983,
                  "start": 1486396399181,
                  "end": 1486396404164
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 190,
                  "start": 1486396404165,
                  "end": 1486396404355
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2143,
                  "start": 1486396404356,
                  "end": 1486396406499
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 2708,
                  "start": 1486396406500,
                  "end": 1486396409208
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 865,
                  "start": 1486396409209,
                  "end": 1486396410074
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1841,
                  "start": 1486396410075,
                  "end": 1486396411916
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 174,
                  "start": 1486396411917,
                  "end": 1486396412091
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18,
                  "start": 1486396412091,
                  "end": 1486396412109
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396412109,
                  "end": 1486396412109
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And store values of: apiKey,keyword,zipCode",
                "And change values for: apiKey,keyword,zipCode",
                "When click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 5498,
                  "start": 1486396412171,
                  "end": 1486396417669
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 246,
                  "start": 1486396417670,
                  "end": 1486396417916
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 755,
                  "start": 1486396417917,
                  "end": 1486396418672
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1486396418673,
                  "end": 1486396418711
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396418711,
                  "end": 1486396418712
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 7174,
                  "start": 1486396418779,
                  "end": 1486396425953
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 299,
                  "start": 1486396425954,
                  "end": 1486396426253
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 500,
                  "start": 1486396426254,
                  "end": 1486396426754
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1486396426754,
                  "end": 1486396426779
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396426779,
                  "end": 1486396426779
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 56258,
        "start": 1486396370592,
        "end": 1486396426850
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/SummaryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          }
        ],
        "name": "SummaryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 4292,
                  "start": 1486396426853,
                  "end": 1486396431145
                },
                {
                  "step": "Then Summary widget is shown for Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Getting Started page",
                  "durationInMillis": 172,
                  "start": 1486396431146,
                  "end": 1486396431318
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 258,
                  "start": 1486396431319,
                  "end": 1486396431577
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396431577,
                  "end": 1486396431578
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then Summary widget is shown for Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2795,
                  "start": 1486396431689,
                  "end": 1486396434484
                },
                {
                  "step": "Then Summary widget is shown for Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Home page",
                  "durationInMillis": 92,
                  "start": 1486396434510,
                  "end": 1486396434602
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 137,
                  "start": 1486396434602,
                  "end": 1486396434739
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1486396434739,
                  "end": 1486396434739
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then Summary widget is shown for Home page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 4951,
                  "start": 1486396434803,
                  "end": 1486396439754
                },
                {
                  "step": "Then Summary widget is shown for API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for API Explorer page",
                  "durationInMillis": 373,
                  "start": 1486396439755,
                  "end": 1486396440128
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 65,
                  "start": 1486396440129,
                  "end": 1486396440194
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1486396440194,
                  "end": 1486396440195
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then Summary widget is shown for API Explorer page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13422,
        "start": 1486396426852,
        "end": 1486396440274
      },
      "givenStory": false
    }
  ],
  "scenarios": [
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Blogs page",
          "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Blogs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Blogs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Blogs page",
              "durationInMillis": 3686,
              "start": 1486394981169,
              "end": 1486394984855
            },
            {
              "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40502,
              "start": 1486394984857,
              "end": 1486395025359
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 70,
              "start": 1486395025364,
              "end": 1486395025434
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395025434,
              "end": 1486395025435
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/blogs/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Blogs page",
            "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/events/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Events page",
          "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/Events.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Events page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Events page",
              "durationInMillis": 3461,
              "start": 1486395025698,
              "end": 1486395029159
            },
            {
              "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10289,
              "start": 1486395029161,
              "end": 1486395039450
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35,
              "start": 1486395039451,
              "end": 1486395039486
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395039486,
              "end": 1486395039487
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/events/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Events page",
            "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for general page elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2774,
              "start": 1486395039557,
              "end": 1486395042331
            },
            {
              "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20613,
              "start": 1486395042333,
              "end": 1486395062946
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 39,
              "start": 1486395062948,
              "end": 1486395062987
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395062987,
              "end": 1486395062988
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for general page elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for twitter's list of events",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check that Twitter's list of events is shown"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2976,
              "start": 1486395063056,
              "end": 1486395066032
            },
            {
              "step": "Then check that Twitter's list of events is shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that Twitter's list of events is shown",
              "durationInMillis": 190,
              "start": 1486395066033,
              "end": 1486395066223
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 79,
              "start": 1486395066224,
              "end": 1486395066303
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395066303,
              "end": 1486395066304
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for twitter's list of events",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check that Twitter's list of events is shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for all the page links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "elementLocation"
          ],
          "data": [
            [
              [
                "elementKey",
                "Get Your API Key"
              ],
              [
                "pageURL",
                "https://developer-acct.ticketmaster.com/user/login"
              ],
              [
                "elementLocation",
                "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
              ]
            ],
            [
              [
                "elementKey",
                "Review Documentation"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/getting-started/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Explore The API"
              ],
              [
                "pageURL",
                "{url}/api-explorer/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Android"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#android-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Backend"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#backend-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "iOS"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#iOS-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Web"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#web-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Tech blog"
              ],
              [
                "pageURL",
                "https://tech.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//h1[@class='site-title']/a"
              ]
            ],
            [
              [
                "elementKey",
                "Medium Publication"
              ],
              [
                "pageURL",
                "https://medium.com/ticketmaster-tech"
              ],
              [
                "elementLocation",
                "//h2[text()='Because Engineers are Fans Too!']"
              ]
            ],
            [
              [
                "elementKey",
                "Partner API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/partner/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Deals API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/deals-api/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Legacy docs"
              ],
              [
                "pageURL",
                "http://apidocs.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//td[@class='WikiLogoName']/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Get Your API Key"
            ],
            [
              "pageURL",
              "https://developer-acct.ticketmaster.com/user/login"
            ],
            [
              "elementLocation",
              "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3273,
                "start": 1486395066443,
                "end": 1486395069716
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                "durationInMillis": 358,
                "start": 1486395069717,
                "end": 1486395070075
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                "durationInMillis": 1218,
                "start": 1486395070076,
                "end": 1486395071294
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Review Documentation"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/getting-started/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3438,
                "start": 1486395071377,
                "end": 1486395074815
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                "durationInMillis": 327,
                "start": 1486395074817,
                "end": 1486395075144
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                "durationInMillis": 853,
                "start": 1486395075145,
                "end": 1486395075998
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Explore The API"
            ],
            [
              "pageURL",
              "{url}/api-explorer/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3188,
                "start": 1486395076074,
                "end": 1486395079262
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                "durationInMillis": 277,
                "start": 1486395079264,
                "end": 1486395079541
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                "durationInMillis": 1995,
                "start": 1486395079543,
                "end": 1486395081538
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Android"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#android-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3539,
                "start": 1486395081665,
                "end": 1486395085204
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                "durationInMillis": 752,
                "start": 1486395085206,
                "end": 1486395085958
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                "durationInMillis": 36,
                "start": 1486395085959,
                "end": 1486395085995
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Backend"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#backend-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3104,
                "start": 1486395086061,
                "end": 1486395089165
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                "durationInMillis": 293,
                "start": 1486395089166,
                "end": 1486395089459
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                "durationInMillis": 234,
                "start": 1486395089460,
                "end": 1486395089694
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "iOS"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#iOS-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3663,
                "start": 1486395089765,
                "end": 1486395093428
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                "durationInMillis": 497,
                "start": 1486395093429,
                "end": 1486395093926
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                "durationInMillis": 252,
                "start": 1486395093928,
                "end": 1486395094180
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Web"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#web-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3210,
                "start": 1486395094248,
                "end": 1486395097458
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                "durationInMillis": 568,
                "start": 1486395097458,
                "end": 1486395098026
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                "durationInMillis": 240,
                "start": 1486395098028,
                "end": 1486395098268
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Tech blog"
            ],
            [
              "pageURL",
              "https://tech.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//h1[@class='site-title']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3895,
                "start": 1486395098335,
                "end": 1486395102230
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                "durationInMillis": 364,
                "start": 1486395102233,
                "end": 1486395102597
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                "durationInMillis": 3169,
                "start": 1486395102598,
                "end": 1486395105767
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Medium Publication"
            ],
            [
              "pageURL",
              "https://medium.com/ticketmaster-tech"
            ],
            [
              "elementLocation",
              "//h2[text()='Because Engineers are Fans Too!']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3607,
                "start": 1486395105840,
                "end": 1486395109447
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                "durationInMillis": 460,
                "start": 1486395109448,
                "end": 1486395109908
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                "durationInMillis": 8159,
                "start": 1486395109910,
                "end": 1486395118069
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Partner API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/partner/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3364,
                "start": 1486395118143,
                "end": 1486395121507
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                "durationInMillis": 2338,
                "start": 1486395121507,
                "end": 1486395123845
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                "durationInMillis": 665,
                "start": 1486395123847,
                "end": 1486395124512
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Deals API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/deals-api/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3194,
                "start": 1486395124608,
                "end": 1486395127802
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                "durationInMillis": 280,
                "start": 1486395127803,
                "end": 1486395128083
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                "durationInMillis": 1370,
                "start": 1486395128085,
                "end": 1486395129455
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Legacy docs"
            ],
            [
              "pageURL",
              "http://apidocs.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//td[@class='WikiLogoName']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3201,
                "start": 1486395129523,
                "end": 1486395132724
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                "durationInMillis": 1775,
                "start": 1486395132726,
                "end": 1486395134501
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                "durationInMillis": 42,
                "start": 1486395134501,
                "end": 1486395134543
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Open Source"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/"
              ],
              [
                "pageTitle",
                "//h1[@id='logo']"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/OpenSource.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Open Source"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/"
            ],
            [
              "pageTitle",
              "//h1[@id='logo']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3641,
                "start": 1486395134624,
                "end": 1486395138265
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                "durationInMillis": 312,
                "start": 1486395138266,
                "end": 1486395138578
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                "durationInMillis": 300,
                "start": 1486395138579,
                "end": 1486395138879
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "| searchRequest |\n|      test     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "searchRequest"
          ],
          "data": [
            [
              [
                "searchRequest",
                "test"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "And insert Search Parameter <searchRequest> and navigate to Search page",
          "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Search.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "searchRequest",
              "test"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3959,
                "start": 1486395138991,
                "end": 1486395142950
              },
              {
                "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                "durationInMillis": 385,
                "start": 1486395142951,
                "end": 1486395143336
              },
              {
                "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                "durationInMillis": 22737,
                "start": 1486395143337,
                "end": 1486395166074
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Create New Account page from LogIn page",
          "Then check general page elements for Pantheon Create New Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3062,
              "start": 1486395166154,
              "end": 1486395169216
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1470,
              "start": 1486395169217,
              "end": 1486395170687
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 1130,
              "start": 1486395170688,
              "end": 1486395171818
            },
            {
              "step": "Then check general page elements for Pantheon Create New Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
              "durationInMillis": 20314,
              "start": 1486395171819,
              "end": 1486395192133
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 47,
              "start": 1486395192133,
              "end": 1486395192180
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 3,
              "start": 1486395192180,
              "end": 1486395192183
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Create New Account page from LogIn page",
            "Then check general page elements for Pantheon Create New Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "When navigate to Pantheon Edit Profile page from User Account page",
          "Then check general page elements for Pantheon Edit Profile page"
        ]
      },
      "storyPath": "stories/site/pantheon/EditProfile.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 4008,
              "start": 1486395192268,
              "end": 1486395196276
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1311,
              "start": 1486395196277,
              "end": 1486395197588
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 6621,
              "start": 1486395197589,
              "end": 1486395204210
            },
            {
              "step": "When navigate to Pantheon Edit Profile page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
              "durationInMillis": 2820,
              "start": 1486395204211,
              "end": 1486395207031
            },
            {
              "step": "Then check general page elements for Pantheon Edit Profile page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
              "durationInMillis": 20322,
              "start": 1486395207032,
              "end": 1486395227354
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1486395227354,
              "end": 1486395227392
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395227392,
              "end": 1486395227392
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "When navigate to Pantheon Edit Profile page from User Account page",
            "Then check general page elements for Pantheon Edit Profile page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Request New Password page from LogIn page",
          "Then check general page elements for Pantheon Request New Password page"
        ]
      },
      "storyPath": "stories/site/pantheon/RequestNewPassword.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3003,
              "start": 1486395227463,
              "end": 1486395230466
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1214,
              "start": 1486395230467,
              "end": 1486395231681
            },
            {
              "step": "When navigate to Pantheon Request New Password page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
              "durationInMillis": 539,
              "start": 1486395231682,
              "end": 1486395232221
            },
            {
              "step": "Then check general page elements for Pantheon Request New Password page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
              "durationInMillis": 20452,
              "start": 1486395232222,
              "end": 1486395252674
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 45,
              "start": 1486395252675,
              "end": 1486395252720
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395252720,
              "end": 1486395252721
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Request New Password page from LogIn page",
            "Then check general page elements for Pantheon Request New Password page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "Then check general page elements for Pantheon User Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2701,
              "start": 1486395252820,
              "end": 1486395255521
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1036,
              "start": 1486395255522,
              "end": 1486395256558
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 7516,
              "start": 1486395256559,
              "end": 1486395264075
            },
            {
              "step": "Then check general page elements for Pantheon User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User Account page",
              "durationInMillis": 20363,
              "start": 1486395264076,
              "end": 1486395284439
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31,
              "start": 1486395284440,
              "end": 1486395284471
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395284471,
              "end": 1486395284472
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": [
            {
              "@name": "debug",
              "@value": ""
            }
          ]
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "Then check general page elements for Pantheon User Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "Then check general page elements for Pantheon User LonIn page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2915,
              "start": 1486395284549,
              "end": 1486395287464
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1147,
              "start": 1486395287465,
              "end": 1486395288612
            },
            {
              "step": "Then check general page elements for Pantheon User LonIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User LonIn page",
              "durationInMillis": 20289,
              "start": 1486395288613,
              "end": 1486395308902
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1486395308903,
              "end": 1486395308937
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395308937,
              "end": 1486395308938
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "Then check general page elements for Pantheon User LonIn page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partners page",
          "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/partners/Partners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partners page",
              "durationInMillis": 3262,
              "start": 1486395309015,
              "end": 1486395312277
            },
            {
              "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20341,
              "start": 1486395312278,
              "end": 1486395332619
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 53,
              "start": 1486395332620,
              "end": 1486395332673
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395332673,
              "end": 1486395332674
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partners page",
            "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Certified Partners page",
          "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Certified Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Certified Partners page",
              "durationInMillis": 3668,
              "start": 1486395332745,
              "end": 1486395336413
            },
            {
              "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10313,
              "start": 1486395336414,
              "end": 1486395346727
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1486395346728,
              "end": 1486395346753
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395346753,
              "end": 1486395346754
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Certified Partners page",
            "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/distribution-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Distribution Partners page",
          "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Distribution Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Distribution Partners page",
              "durationInMillis": 3215,
              "start": 1486395346821,
              "end": 1486395350036
            },
            {
              "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 647,
              "start": 1486395350037,
              "end": 1486395350684
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 140,
              "start": 1486395350685,
              "end": 1486395350825
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395350825,
              "end": 1486395350825
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/distribution-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Distribution Partners page",
            "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Join The Nexus Program page",
          "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_Nexus.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Join The Nexus Program page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Join The Nexus Program page",
              "durationInMillis": 3711,
              "start": 1486395350900,
              "end": 1486395354611
            },
            {
              "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 641,
              "start": 1486395354612,
              "end": 1486395355253
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 36,
              "start": 1486395355254,
              "end": 1486395355290
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395355290,
              "end": 1486395355291
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Join The Nexus Program page",
            "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/startups-and-developers/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Startups and Developers page",
          "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Startups and Developers page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Startups and Developers page",
              "durationInMillis": 4221,
              "start": 1486395355360,
              "end": 1486395359581
            },
            {
              "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 631,
              "start": 1486395359582,
              "end": 1486395360213
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 55,
              "start": 1486395360214,
              "end": 1486395360269
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395360269,
              "end": 1486395360269
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/startups-and-developers/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Startups and Developers page",
            "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Products and Docs page",
          "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Products and Docs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Products and Docs page",
              "durationInMillis": 2732,
              "start": 1486395360341,
              "end": 1486395363073
            },
            {
              "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40609,
              "start": 1486395363074,
              "end": 1486395403683
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 44,
              "start": 1486395403683,
              "end": 1486395403727
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395403727,
              "end": 1486395403728
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Products and Docs page",
            "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 5496,
              "start": 1486395403831,
              "end": 1486395409327
            },
            {
              "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
              "durationInMillis": 11420,
              "start": 1486395409328,
              "end": 1486395420748
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32,
              "start": 1486395420749,
              "end": 1486395420781
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395420781,
              "end": 1486395420782
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/v2) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer V2 page",
          "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer V2 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer V2 page",
              "durationInMillis": 3886,
              "start": 1486395420876,
              "end": 1486395424762
            },
            {
              "step": "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for API Explorer V2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
              "durationInMillis": 11204,
              "start": 1486395424763,
              "end": 1486395435967
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 36,
              "start": 1486395435968,
              "end": 1486395436004
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395436004,
              "end": 1486395436004
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/v2) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer V2 page",
            "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open ChangeLog page",
          "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open ChangeLog page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open ChangeLog page",
              "durationInMillis": 3493,
              "start": 1486395436090,
              "end": 1486395439583
            },
            {
              "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 902,
              "start": 1486395439585,
              "end": 1486395440487
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 54,
              "start": 1486395440488,
              "end": 1486395440542
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395440542,
              "end": 1486395440543
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open ChangeLog page",
            "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 5678,
              "start": 1486395440625,
              "end": 1486395446303
            },
            {
              "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1323,
              "start": 1486395446305,
              "end": 1486395447628
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1486395447629,
              "end": 1486395447652
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395447652,
              "end": 1486395447652
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Deals API page",
          "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Deals API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Deals API page",
              "durationInMillis": 4360,
              "start": 1486395447776,
              "end": 1486395452136
            },
            {
              "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 816,
              "start": 1486395452137,
              "end": 1486395452953
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43,
              "start": 1486395452953,
              "end": 1486395452996
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 2,
              "start": 1486395452996,
              "end": 1486395452998
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Deals API page",
            "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v1 page",
          "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v1 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v1 page",
              "durationInMillis": 4839,
              "start": 1486395453075,
              "end": 1486395457914
            },
            {
              "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 938,
              "start": 1486395457915,
              "end": 1486395458853
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1486395458854,
              "end": 1486395458883
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395458883,
              "end": 1486395458884
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v1 page",
            "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v2 page",
          "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v2 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v2 page",
              "durationInMillis": 6641,
              "start": 1486395458958,
              "end": 1486395465599
            },
            {
              "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 2752,
              "start": 1486395465600,
              "end": 1486395468352
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 42,
              "start": 1486395468353,
              "end": 1486395468395
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395468395,
              "end": 1486395468396
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v2 page",
            "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "When Commerce API menu has list of methods",
          "And open Getting Started page",
          "Then all the Commerce API methods are shown on Getting Started page"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 4971,
              "start": 1486395468463,
              "end": 1486395473434
            },
            {
              "step": "When Commerce API menu has list of methods",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When Commerce API menu has list of methods",
              "durationInMillis": 128458,
              "start": 1486395473435,
              "end": 1486395601893
            },
            {
              "step": "And open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And open Getting Started page",
              "durationInMillis": 2247,
              "start": 1486395601895,
              "end": 1486395604142
            },
            {
              "step": "Then all the Commerce API methods are shown on Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
              "durationInMillis": 53918,
              "start": 1486395604143,
              "end": 1486395658061
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 833,
              "start": 1486395658062,
              "end": 1486395658895
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395658895,
              "end": 1486395658895
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "When Commerce API menu has list of methods",
            "And open Getting Started page",
            "Then all the Commerce API methods are shown on Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 3353,
              "start": 1486395658964,
              "end": 1486395662317
            },
            {
              "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 989,
              "start": 1486395662318,
              "end": 1486395663307
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33,
              "start": 1486395663308,
              "end": 1486395663341
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395663341,
              "end": 1486395663342
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open International Discovery API page",
          "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open International Discovery API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open International Discovery API page",
              "durationInMillis": 6326,
              "start": 1486395663416,
              "end": 1486395669742
            },
            {
              "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 2154,
              "start": 1486395669743,
              "end": 1486395671897
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 41,
              "start": 1486395671897,
              "end": 1486395671938
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395671938,
              "end": 1486395671939
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open International Discovery API page",
            "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Inventory Status API page",
          "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Inventory Status API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Inventory Status API page",
              "durationInMillis": 4056,
              "start": 1486395672018,
              "end": 1486395676074
            },
            {
              "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 918,
              "start": 1486395676074,
              "end": 1486395676992
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 75,
              "start": 1486395676992,
              "end": 1486395677067
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395677067,
              "end": 1486395677068
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Inventory Status API page",
            "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Oauth API page",
          "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Oauth API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Oauth API page",
              "durationInMillis": 3545,
              "start": 1486395677142,
              "end": 1486395680687
            },
            {
              "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 996,
              "start": 1486395680689,
              "end": 1486395681685
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28,
              "start": 1486395681685,
              "end": 1486395681713
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395681713,
              "end": 1486395681714
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Oauth API page",
            "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API page",
          "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API page",
              "durationInMillis": 4860,
              "start": 1486395681782,
              "end": 1486395686642
            },
            {
              "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 959,
              "start": 1486395686643,
              "end": 1486395687602
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32,
              "start": 1486395687603,
              "end": 1486395687635
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395687635,
              "end": 1486395687635
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API page",
            "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Publish API page",
          "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Publish API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Publish API page",
              "durationInMillis": 4408,
              "start": 1486395687716,
              "end": 1486395692124
            },
            {
              "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1033,
              "start": 1486395692125,
              "end": 1486395693158
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 47,
              "start": 1486395693158,
              "end": 1486395693205
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395693205,
              "end": 1486395693205
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Publish API page",
            "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/sdks/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open SDKs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open SDKs page",
              "durationInMillis": 3756,
              "start": 1486395693306,
              "end": 1486395697062
            },
            {
              "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 933,
              "start": 1486395697063,
              "end": 1486395697996
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 42,
              "start": 1486395697997,
              "end": 1486395698039
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395698039,
              "end": 1486395698040
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/sdks/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open SDKs page",
            "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(products-and-docs/sdks/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "SDK-Java Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-java"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-JavaScript Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-javascript"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-Scala Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-scala"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "When check visibility and click <elementKey> element of SDKs page",
          "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Java Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-java"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 3717,
                "start": 1486395698113,
                "end": 1486395701830
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                "durationInMillis": 1593,
                "start": 1486395701831,
                "end": 1486395703424
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1224,
                "start": 1486395703425,
                "end": 1486395704649
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-JavaScript Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-javascript"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 3838,
                "start": 1486395704712,
                "end": 1486395708550
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "When check visibility and click <elementKey> element of SDKs page",
                  "cause": {
                    "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                    "detailMessage": "org.openqa.selenium.WebDriverException: Element is not clickable at point (801.4833374023438, 417). Other element would receive the click: <img src=\"/assets/img/products-and-docs/sdk-js-logo.png\" alt=\"\"> (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 12 milliseconds\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-c4c14acc-7b83-4c64-901d-1cde511c15c7', ip: '172.17.0.15', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=31.0, platform=LINUX, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]\nSession ID: 4a3a48e3-ecf2-4541-9231-4fef4073282c",
                    "cause": {
                      "@class": "org.openqa.selenium.WebDriverException",
                      "@defined-in": "java.lang.Throwable",
                      "detailMessage": "Element is not clickable at point (801.4833374023438, 417). Other element would receive the click: <img src=\"/assets/img/products-and-docs/sdk-js-logo.png\" alt=\"\"> (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 12 milliseconds",
                      "stackTrace": [
                        "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
                        "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
                        "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
                        "java.lang.reflect.Constructor.newInstance(Constructor.java:408)",
                        "org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)",
                        "org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)",
                        "org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)",
                        "org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35)",
                        "org.openqa.selenium.remote.RemoteMouse.click(RemoteMouse.java:59)",
                        "org.openqa.selenium.interactions.ClickAction.perform(ClickAction.java:37)",
                        "org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:50)",
                        "bla.tm.steps.products_and_docs.PD_SDKsSteps.validateAndClickElement(PD_SDKsSteps.java:37)",
                        "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.CGLIB$validateAndClickElement$3(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd$$FastClassByCGLIB$$a9117abf.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.validateAndClickElement(<generated>)",
                        "bla.tm.definitions.site.products_and_docs.PD_SDKsDefinition.checkIfElementVisibleAndClickIt(PD_SDKsDefinition.java:27)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "extraInfo": [
                        [
                          "Driver info",
                          "org.openqa.selenium.firefox.FirefoxDriver"
                        ],
                        [
                          "Capabilities",
                          "Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=31.0, platform=LINUX, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]"
                        ],
                        [
                          "Session ID",
                          "4a3a48e3-ecf2-4541-9231-4fef4073282c"
                        ]
                      ]
                    },
                    "stackTrace": [
                      "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.validateAndClickElement(<generated>)",
                      "bla.tm.definitions.site.products_and_docs.PD_SDKsDefinition.checkIfElementVisibleAndClickIt(PD_SDKsDefinition.java:27)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "detailedMessage": "Element is not clickable at point (801.4833374023438, 417). Other element would receive the click: <img src=\"/assets/img/products-and-docs/sdk-js-logo.png\" alt=\"\"> (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 12 milliseconds\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-c4c14acc-7b83-4c64-901d-1cde511c15c7', ip: '172.17.0.15', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=31.0, platform=LINUX, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]\nSession ID: 4a3a48e3-ecf2-4541-9231-4fef4073282c",
                    "stackTrace": [
                      "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
                      "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
                      "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
                      "java.lang.reflect.Constructor.newInstance(Constructor.java:408)",
                      "org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)",
                      "org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)",
                      "org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)",
                      "org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35)",
                      "org.openqa.selenium.remote.RemoteMouse.click(RemoteMouse.java:59)",
                      "org.openqa.selenium.interactions.ClickAction.perform(ClickAction.java:37)",
                      "org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:50)",
                      "bla.tm.steps.products_and_docs.PD_SDKsSteps.validateAndClickElement(PD_SDKsSteps.java:37)",
                      "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.CGLIB$validateAndClickElement$3(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd$$FastClassByCGLIB$$a9117abf.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_SDKsSteps$$EnhancerByCGLIB$$b14039dd.validateAndClickElement(<generated>)",
                      "bla.tm.definitions.site.products_and_docs.PD_SDKsDefinition.checkIfElementVisibleAndClickIt(PD_SDKsDefinition.java:27)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "exceptionClass": "org.openqa.selenium.WebDriverException"
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "d0ead946-2bfe-4261-9d7f-26c62b9d9a84"
                },
                "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                "durationInMillis": 1914,
                "start": 1486395708551,
                "end": 1486395710465
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Scala Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-scala"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 3404,
                "start": 1486395710553,
                "end": 1486395713957
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                "durationInMillis": 1589,
                "start": 1486395713958,
                "end": 1486395715547
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1141,
                "start": 1486395715548,
                "end": 1486395716689
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Season Ticketing API page",
          "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Season Ticketing API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Season Ticketing API page",
              "durationInMillis": 3378,
              "start": 1486395716892,
              "end": 1486395720270
            },
            {
              "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 884,
              "start": 1486395720271,
              "end": 1486395721155
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1486395721156,
              "end": 1486395721194
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395721194,
              "end": 1486395721194
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Season Ticketing API page",
            "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Top Picks API page",
          "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Top Picks API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Top Picks API page",
              "durationInMillis": 4059,
              "start": 1486395721296,
              "end": 1486395725355
            },
            {
              "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 762,
              "start": 1486395725355,
              "end": 1486395726117
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1486395726118,
              "end": 1486395726142
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395726142,
              "end": 1486395726142
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Top Picks API page",
            "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials page",
              "durationInMillis": 2762,
              "start": 1486395726208,
              "end": 1486395728970
            },
            {
              "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10266,
              "start": 1486395728971,
              "end": 1486395739237
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33,
              "start": 1486395739238,
              "end": 1486395739271
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395739271,
              "end": 1486395739272
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials page",
            "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "When check visibility and click <elementKey> element of Tutorials page",
          "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2572,
                "start": 1486395739340,
                "end": 1486395741912
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                "durationInMillis": 1728,
                "start": 1486395741913,
                "end": 1486395743641
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 611,
                "start": 1486395743643,
                "end": 1486395744254
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2238,
                "start": 1486395744320,
                "end": 1486395746558
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 2044,
                "start": 1486395746559,
                "end": 1486395748603
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 47,
                "start": 1486395748603,
                "end": 1486395748650
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2689,
                "start": 1486395748713,
                "end": 1486395751402
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 801,
                "start": 1486395751403,
                "end": 1486395752204
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 934,
                "start": 1486395752205,
                "end": 1486395753139
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2303,
                "start": 1486395753453,
                "end": 1486395755756
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                "durationInMillis": 804,
                "start": 1486395755757,
                "end": 1486395756561
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 736,
                "start": 1486395756561,
                "end": 1486395757297
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2713,
                "start": 1486395757362,
                "end": 1486395760075
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 770,
                "start": 1486395760076,
                "end": 1486395760846
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 813,
                "start": 1486395760847,
                "end": 1486395761660
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2354,
                "start": 1486395761727,
                "end": 1486395764081
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 851,
                "start": 1486395764082,
                "end": 1486395764933
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 1023,
                "start": 1486395764935,
                "end": 1486395765958
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2192,
                "start": 1486395766217,
                "end": 1486395768409
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                "durationInMillis": 2128,
                "start": 1486395768410,
                "end": 1486395770538
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 504,
                "start": 1486395770540,
                "end": 1486395771044
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2486,
                "start": 1486395771110,
                "end": 1486395773596
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 801,
                "start": 1486395773600,
                "end": 1486395774401
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 1762,
                "start": 1486395774402,
                "end": 1486395776164
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2971,
                "start": 1486395776237,
                "end": 1486395779208
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 773,
                "start": 1486395779210,
                "end": 1486395779983
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 1961,
                "start": 1486395779984,
                "end": 1486395781945
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch page",
              "durationInMillis": 2108,
              "start": 1486395782071,
              "end": 1486395784179
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10311,
              "start": 1486395784181,
              "end": 1486395794492
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 36,
              "start": 1486395794493,
              "end": 1486395794529
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395794529,
              "end": 1486395794529
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch page",
            "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "When check visibility and click <elementKey> element of Tutorials EventSearch page",
          "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2987,
                "start": 1486395794597,
                "end": 1486395797584
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 734,
                "start": 1486395797585,
                "end": 1486395798319
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 1440,
                "start": 1486395798321,
                "end": 1486395799761
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2842,
                "start": 1486395799826,
                "end": 1486395802668
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 773,
                "start": 1486395802668,
                "end": 1486395803441
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 851,
                "start": 1486395803442,
                "end": 1486395804293
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2014,
                "start": 1486395804354,
                "end": 1486395806368
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1667,
                "start": 1486395806369,
                "end": 1486395808036
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 408,
                "start": 1486395808037,
                "end": 1486395808445
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2872,
                "start": 1486395808510,
                "end": 1486395811382
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 1828,
                "start": 1486395811383,
                "end": 1486395813211
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 556,
                "start": 1486395813212,
                "end": 1486395813768
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2116,
                "start": 1486395813908,
                "end": 1486395816024
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1787,
                "start": 1486395816025,
                "end": 1486395817812
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 710,
                "start": 1486395817813,
                "end": 1486395818523
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2556,
                "start": 1486395818694,
                "end": 1486395821250
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1888,
                "start": 1486395821251,
                "end": 1486395823139
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 680,
                "start": 1486395823140,
                "end": 1486395823820
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventInSomeLocation page",
          "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "durationInMillis": 3342,
              "start": 1486395823893,
              "end": 1486395827235
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 753,
              "start": 1486395827236,
              "end": 1486395827989
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1486395827989,
              "end": 1486395828009
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395828009,
              "end": 1486395828010
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventInSomeLocation page",
            "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
          "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "durationInMillis": 3268,
              "start": 1486395828083,
              "end": 1486395831351
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 500,
              "start": 1486395831352,
              "end": 1486395831852
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1486395831853,
              "end": 1486395831877
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395831877,
              "end": 1486395831877
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
            "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 2490,
              "start": 1486395831947,
              "end": 1486395834437
            },
            {
              "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10221,
              "start": 1486395834439,
              "end": 1486395844660
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1486395844664,
              "end": 1486395844698
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395844698,
              "end": 1486395844699
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When check visibility and click <elementKey> element of Tutorials Widgets page",
          "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 2617,
                "start": 1486395844768,
                "end": 1486395847385
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                "durationInMillis": 1094,
                "start": 1486395847386,
                "end": 1486395848480
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 382,
                "start": 1486395848481,
                "end": 1486395848863
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1962,
                "start": 1486395848927,
                "end": 1486395850889
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                "durationInMillis": 1056,
                "start": 1486395850890,
                "end": 1486395851946
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 438,
                "start": 1486395851947,
                "end": 1486395852385
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 2344,
                "start": 1486395852517,
                "end": 1486395854861
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                "durationInMillis": 927,
                "start": 1486395854862,
                "end": 1486395855789
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 570,
                "start": 1486395855790,
                "end": 1486395856360
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets EventDiscoveryWidget page",
          "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "durationInMillis": 2860,
              "start": 1486395856431,
              "end": 1486395859291
            },
            {
              "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 515,
              "start": 1486395859292,
              "end": 1486395859807
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35,
              "start": 1486395859807,
              "end": 1486395859842
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395859842,
              "end": 1486395859842
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets EventDiscoveryWidget page",
            "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2856,
              "start": 1486395859913,
              "end": 1486395862769
            },
            {
              "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 824,
              "start": 1486395862770,
              "end": 1486395863594
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 244,
              "start": 1486395863595,
              "end": 1486395863839
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395863839,
              "end": 1486395863840
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3952,
              "start": 1486395863905,
              "end": 1486395867857
            },
            {
              "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 622,
              "start": 1486395867858,
              "end": 1486395868480
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1486395868480,
              "end": 1486395868501
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395868501,
              "end": 1486395868502
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 5037,
              "start": 1486395868567,
              "end": 1486395873604
            },
            {
              "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 573,
              "start": 1486395873605,
              "end": 1486395874178
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 30,
              "start": 1486395874178,
              "end": 1486395874208
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395874208,
              "end": 1486395874209
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Universal Checkout page",
          "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Universal Checkout page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Universal Checkout page",
              "durationInMillis": 4255,
              "start": 1486395874277,
              "end": 1486395878532
            },
            {
              "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 535,
              "start": 1486395878532,
              "end": 1486395879067
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1486395879068,
              "end": 1486395879088
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395879088,
              "end": 1486395879088
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Universal Checkout page",
            "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open WordPress Widget page",
          "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open WordPress Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open WordPress Widget page",
              "durationInMillis": 4688,
              "start": 1486395879154,
              "end": 1486395883842
            },
            {
              "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 174,
              "start": 1486395883842,
              "end": 1486395884016
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 30,
              "start": 1486395884017,
              "end": 1486395884047
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395884047,
              "end": 1486395884048
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open WordPress Widget page",
            "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 3528,
              "start": 1486395884114,
              "end": 1486395887642
            },
            {
              "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10206,
              "start": 1486395887643,
              "end": 1486395897849
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1486395897850,
              "end": 1486395897872
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395897872,
              "end": 1486395897872
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click DirectPaymentButton element of Widgets page",
          "Then check that new page opened from Direct Payment Button has has appropriate url"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 2194,
              "start": 1486395897934,
              "end": 1486395900128
            },
            {
              "step": "When check visibility and click DirectPaymentButton element of Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
              "durationInMillis": 807,
              "start": 1486395900129,
              "end": 1486395900936
            },
            {
              "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "durationInMillis": 945,
              "start": 1486395900936,
              "end": 1486395901881
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1486395901882,
              "end": 1486395901906
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395901906,
              "end": 1486395901906
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "When check visibility and click DirectPaymentButton element of Widgets page",
            "Then check that new page opened from Direct Payment Button has has appropriate url"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Checkout Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/checkout/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/event-discovery/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Countdown Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/countdown/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Calendar Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/calendar/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "WordPress Widget Learn Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/wordpress/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click <elementKey> element of Widgets page",
          "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Checkout Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/checkout/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 2092,
                "start": 1486395901970,
                "end": 1486395904062
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                "durationInMillis": 2212,
                "start": 1486395904063,
                "end": 1486395906275
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                "durationInMillis": 103,
                "start": 1486395906276,
                "end": 1486395906379
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/event-discovery/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 2180,
                "start": 1486395906472,
                "end": 1486395908652
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                "durationInMillis": 4363,
                "start": 1486395908653,
                "end": 1486395913016
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                "durationInMillis": 175,
                "start": 1486395913017,
                "end": 1486395913192
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Countdown Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/countdown/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 4185,
                "start": 1486395913268,
                "end": 1486395917453
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                "durationInMillis": 2704,
                "start": 1486395917454,
                "end": 1486395920158
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                "durationInMillis": 55,
                "start": 1486395920158,
                "end": 1486395920213
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Calendar Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/calendar/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 3664,
                "start": 1486395920282,
                "end": 1486395923946
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                "durationInMillis": 2812,
                "start": 1486395923947,
                "end": 1486395926759
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                "durationInMillis": 226,
                "start": 1486395926760,
                "end": 1486395926986
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "WordPress Widget Learn Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/wordpress/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 2377,
                "start": 1486395927048,
                "end": 1486395929425
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                "durationInMillis": 1921,
                "start": 1486395929425,
                "end": 1486395931346
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                "durationInMillis": 449,
                "start": 1486395931348,
                "end": 1486395931797
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Support page",
          "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Support page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Support page",
              "durationInMillis": 3624,
              "start": 1486395931881,
              "end": 1486395935505
            },
            {
              "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 283,
              "start": 1486395935506,
              "end": 1486395935789
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1486395935790,
              "end": 1486395935814
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395935814,
              "end": 1486395935815
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Support page",
            "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/branding-guide/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Branding Guide page",
          "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_BrandingGuide.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Branding Guide page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Branding Guide page",
              "durationInMillis": 2908,
              "start": 1486395935881,
              "end": 1486395938789
            },
            {
              "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 552,
              "start": 1486395938790,
              "end": 1486395939342
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1486395939342,
              "end": 1486395939371
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395939371,
              "end": 1486395939372
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/branding-guide/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Branding Guide page",
            "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/contact-us/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Contact Us page",
          "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_ContactUs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Contact Us page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Contact Us page",
              "durationInMillis": 2942,
              "start": 1486395939442,
              "end": 1486395942384
            },
            {
              "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10229,
              "start": 1486395942385,
              "end": 1486395952614
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1486395952614,
              "end": 1486395952638
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395952638,
              "end": 1486395952639
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/contact-us/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Contact Us page",
            "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/faq/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open FAQ page",
          "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_FAQ.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open FAQ page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open FAQ page",
              "durationInMillis": 4687,
              "start": 1486395952712,
              "end": 1486395957399
            },
            {
              "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 501,
              "start": 1486395957400,
              "end": 1486395957901
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1486395957902,
              "end": 1486395957921
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395957921,
              "end": 1486395957921
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/faq/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open FAQ page",
            "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open General Terms Of Use page",
          "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open General Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open General Terms Of Use page",
              "durationInMillis": 2767,
              "start": 1486395957985,
              "end": 1486395960752
            },
            {
              "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 467,
              "start": 1486395960753,
              "end": 1486395961220
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32,
              "start": 1486395961220,
              "end": 1486395961252
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395961252,
              "end": 1486395961252
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open General Terms Of Use page",
            "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API Terms Of Use page",
          "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API Terms Of Use page",
              "durationInMillis": 3133,
              "start": 1486395961325,
              "end": 1486395964458
            },
            {
              "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 533,
              "start": 1486395964459,
              "end": 1486395964992
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 64,
              "start": 1486395964993,
              "end": 1486395965057
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395965057,
              "end": 1486395965058
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API Terms Of Use page",
            "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then the required fields are not empty on the Calendar Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2767,
              "start": 1486395965123,
              "end": 1486395967890
            },
            {
              "step": "Then the required fields are not empty on the Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
              "durationInMillis": 423,
              "start": 1486395967891,
              "end": 1486395968314
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 57,
              "start": 1486395968314,
              "end": 1486395968371
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395968371,
              "end": 1486395968372
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then the required fields are not empty on the Calendar Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And change values for: apiKey,keyword,zipCode",
          "And store values of: apiKey,keyword,zipCode",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 4024,
              "start": 1486395968438,
              "end": 1486395972462
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2391,
              "start": 1486395972463,
              "end": 1486395974854
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 186,
              "start": 1486395974855,
              "end": 1486395975041
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 867,
              "start": 1486395975042,
              "end": 1486395975909
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1506,
              "start": 1486395975910,
              "end": 1486395977416
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 311,
              "start": 1486395977416,
              "end": 1486395977727
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27,
              "start": 1486395977728,
              "end": 1486395977755
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486395977755,
              "end": 1486395977755
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And change values for: apiKey,keyword,zipCode",
            "And store values of: apiKey,keyword,zipCode",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "zipCode",
            "countryName"
          ],
          "data": [
            [
              [
                "zipCode",
                "01000"
              ],
              [
                "countryName",
                "France"
              ]
            ],
            [
              [
                "zipCode",
                "K1P 1J1"
              ],
              [
                "countryName",
                "Canada"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When change value of Zip Code <zipCode>",
          "Then the Country field contains appropriate value <countryName>"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "zipCode",
              "01000"
            ],
            [
              "countryName",
              "France"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Calendar Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Calendar Widget page",
                "durationInMillis": 2967,
                "start": 1486395977825,
                "end": 1486395980792
              },
              {
                "step": "When change value of Zip Code <zipCode>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of Zip Code ｟01000｠",
                "durationInMillis": 2167,
                "start": 1486395980793,
                "end": 1486395982960
              },
              {
                "step": "Then the Country field contains appropriate value <countryName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country field contains appropriate value ｟France｠",
                "durationInMillis": 73,
                "start": 1486395982961,
                "end": 1486395983034
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          }
        },
        {
          "parameters": [
            [
              "zipCode",
              "K1P 1J1"
            ],
            [
              "countryName",
              "Canada"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Calendar Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Calendar Widget page",
                "durationInMillis": 3938,
                "start": 1486395983097,
                "end": 1486395987035
              },
              {
                "step": "When change value of Zip Code <zipCode>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of Zip Code ｟K1P 1J1｠",
                "durationInMillis": 2047,
                "start": 1486395987036,
                "end": 1486395989083
              },
              {
                "step": "Then the Country field contains appropriate value <countryName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country field contains appropriate value ｟Canada｠",
                "durationInMillis": 60,
                "start": 1486395989084,
                "end": 1486395989144
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,zipCode",
          "And change values for: apiKey,keyword,zipCode",
          "When click reset button",
          "Then values of fields: apiKey,keyword,zipCode equals stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 4912,
              "start": 1486395989213,
              "end": 1486395994125
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 617,
              "start": 1486395994127,
              "end": 1486395994744
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2167,
              "start": 1486395994744,
              "end": 1486395996911
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 2737,
              "start": 1486395996912,
              "end": 1486395999649
            },
            {
              "step": "Then values of fields: apiKey,keyword,zipCode equals stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values of fields: ｟apiKey,keyword,zipCode｠ equals stored values",
              "durationInMillis": 215,
              "start": 1486395999650,
              "end": 1486395999865
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31,
              "start": 1486395999866,
              "end": 1486395999897
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486395999897,
              "end": 1486395999898
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,zipCode",
            "And change values for: apiKey,keyword,zipCode",
            "When click reset button",
            "Then values of fields: apiKey,keyword,zipCode equals stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,zipCode",
          "And change values for: apiKey,keyword,zipCode",
          "When click reset button on Calendar Widget Page",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3480,
              "start": 1486395999965,
              "end": 1486396003445
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 698,
              "start": 1486396003446,
              "end": 1486396004144
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2212,
              "start": 1486396004145,
              "end": 1486396006357
            },
            {
              "step": "When click reset button on Calendar Widget Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button on Calendar Widget Page",
              "durationInMillis": 667,
              "start": 1486396006359,
              "end": 1486396007026
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 786,
              "start": 1486396007027,
              "end": 1486396007813
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1381,
              "start": 1486396007814,
              "end": 1486396009195
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 287,
              "start": 1486396009196,
              "end": 1486396009483
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33,
              "start": 1486396009484,
              "end": 1486396009517
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396009517,
              "end": 1486396009517
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,zipCode",
            "And change values for: apiKey,keyword,zipCode",
            "When click reset button on Calendar Widget Page",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3303,
              "start": 1486396009584,
              "end": 1486396012887
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 870,
              "start": 1486396012888,
              "end": 1486396013758
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 934,
              "start": 1486396013759,
              "end": 1486396014693
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 143,
              "start": 1486396014694,
              "end": 1486396014837
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396014837,
              "end": 1486396014838
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3730,
              "start": 1486396014908,
              "end": 1486396018638
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 457,
              "start": 1486396018640,
              "end": 1486396019097
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 1449,
              "start": 1486396019098,
              "end": 1486396020547
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1486396020547,
              "end": 1486396020585
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396020585,
              "end": 1486396020586
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then the required fields are not empty on the Countdown Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4555,
              "start": 1486396020660,
              "end": 1486396025215
            },
            {
              "step": "Then the required fields are not empty on the Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
              "durationInMillis": 299,
              "start": 1486396025216,
              "end": 1486396025515
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1486396025516,
              "end": 1486396025545
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396025545,
              "end": 1486396025546
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then the required fields are not empty on the Countdown Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 5570,
              "start": 1486396025612,
              "end": 1486396031182
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 123,
              "start": 1486396031182,
              "end": 1486396031305
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 792,
              "start": 1486396031305,
              "end": 1486396032097
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1956,
              "start": 1486396032098,
              "end": 1486396034054
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 138,
              "start": 1486396034054,
              "end": 1486396034192
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1486396034193,
              "end": 1486396034214
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396034214,
              "end": 1486396034214
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3691,
              "start": 1486396034278,
              "end": 1486396037969
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 961,
              "start": 1486396037969,
              "end": 1486396038930
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 109,
              "start": 1486396038931,
              "end": 1486396039040
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 753,
              "start": 1486396039041,
              "end": 1486396039794
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1365,
              "start": 1486396039795,
              "end": 1486396041160
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 159,
              "start": 1486396041161,
              "end": 1486396041320
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1486396041321,
              "end": 1486396041343
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396041343,
              "end": 1486396041344
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "Then the ApiKey and EventId fields have stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3172,
              "start": 1486396041411,
              "end": 1486396044583
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 395,
              "start": 1486396044584,
              "end": 1486396044979
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 548,
              "start": 1486396044979,
              "end": 1486396045527
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 111,
              "start": 1486396045528,
              "end": 1486396045639
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 2808,
              "start": 1486396045641,
              "end": 1486396048449
            },
            {
              "step": "Then the ApiKey and EventId fields have stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
              "durationInMillis": 101,
              "start": 1486396048449,
              "end": 1486396048550
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35,
              "start": 1486396048550,
              "end": 1486396048585
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396048585,
              "end": 1486396048586
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "Then the ApiKey and EventId fields have stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 5937,
              "start": 1486396048655,
              "end": 1486396054592
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 365,
              "start": 1486396054593,
              "end": 1486396054958
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 613,
              "start": 1486396054959,
              "end": 1486396055572
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 117,
              "start": 1486396055573,
              "end": 1486396055690
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 2881,
              "start": 1486396055691,
              "end": 1486396058572
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 874,
              "start": 1486396058573,
              "end": 1486396059447
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2025,
              "start": 1486396059448,
              "end": 1486396061473
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 225,
              "start": 1486396061474,
              "end": 1486396061699
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43,
              "start": 1486396061699,
              "end": 1486396061742
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396061742,
              "end": 1486396061743
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When User is logged to site (Countdown Widget)",
          "And get eventId by keyword ADELE",
          "And set first eventId from list",
          "Then the event poster contains ADELE"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4718,
              "start": 1486396061813,
              "end": 1486396066531
            },
            {
              "step": "When User is logged to site (Countdown Widget)",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When User is logged to site (Countdown Widget)",
              "durationInMillis": 9892,
              "start": 1486396066532,
              "end": 1486396076424
            },
            {
              "step": "And get eventId by keyword ADELE",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And get eventId by keyword ｟ADELE｠",
              "durationInMillis": 1655,
              "start": 1486396076425,
              "end": 1486396078080
            },
            {
              "step": "And set first eventId from list",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set first eventId from list",
              "durationInMillis": 1198,
              "start": 1486396078081,
              "end": 1486396079279
            },
            {
              "step": "Then the event poster contains ADELE",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event poster contains ｟ADELE｠",
              "durationInMillis": 375,
              "start": 1486396079280,
              "end": 1486396079655
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32,
              "start": 1486396079656,
              "end": 1486396079688
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396079689,
              "end": 1486396079689
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When User is logged to site (Countdown Widget)",
            "And get eventId by keyword ADELE",
            "And set first eventId from list",
            "Then the event poster contains ADELE"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4591,
              "start": 1486396079759,
              "end": 1486396084350
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 579,
              "start": 1486396084351,
              "end": 1486396084930
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 1007,
              "start": 1486396084931,
              "end": 1486396085938
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 49,
              "start": 1486396085939,
              "end": 1486396085988
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396085988,
              "end": 1486396085988
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to full-width",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored theme"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4193,
              "start": 1486396086065,
              "end": 1486396090258
            },
            {
              "step": "And switch to VISUAL Tab",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And switch to VISUAL Tab",
              "durationInMillis": 896,
              "start": 1486396090259,
              "end": 1486396091155
            },
            {
              "step": "And set theme to full-width",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set theme to full-width",
              "durationInMillis": 580,
              "start": 1486396091156,
              "end": 1486396091736
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 1293,
              "start": 1486396091738,
              "end": 1486396093031
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1498,
              "start": 1486396093032,
              "end": 1486396094530
            },
            {
              "step": "And embedded html code contains stored theme",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored theme",
              "durationInMillis": 205,
              "start": 1486396094531,
              "end": 1486396094736
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 37,
              "start": 1486396094736,
              "end": 1486396094773
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396094773,
              "end": 1486396094774
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And switch to VISUAL Tab",
            "And set theme to full-width",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored theme"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 3971,
                "start": 1486396094853,
                "end": 1486396098824
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1114,
                "start": 1486396098826,
                "end": 1486396099940
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 366,
                "start": 1486396099941,
                "end": 1486396100307
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 842,
                "start": 1486396100312,
                "end": 1486396101154
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1159,
                "start": 1486396101155,
                "end": 1486396102314
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1417,
                "start": 1486396102314,
                "end": 1486396103731
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 369,
                "start": 1486396103732,
                "end": 1486396104101
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 3729,
                "start": 1486396104173,
                "end": 1486396107902
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1315,
                "start": 1486396107903,
                "end": 1486396109218
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 809,
                "start": 1486396109219,
                "end": 1486396110028
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 893,
                "start": 1486396110030,
                "end": 1486396110923
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1051,
                "start": 1486396110925,
                "end": 1486396111976
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2055,
                "start": 1486396111977,
                "end": 1486396114032
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 225,
                "start": 1486396114033,
                "end": 1486396114258
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 4420,
                "start": 1486396114328,
                "end": 1486396118748
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1008,
                "start": 1486396118749,
                "end": 1486396119757
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 594,
                "start": 1486396119758,
                "end": 1486396120352
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 798,
                "start": 1486396120353,
                "end": 1486396121151
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 772,
                "start": 1486396121152,
                "end": 1486396121924
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1479,
                "start": 1486396121925,
                "end": 1486396123404
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 77,
                "start": 1486396123405,
                "end": 1486396123482
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 4051,
                "start": 1486396123551,
                "end": 1486396127602
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1037,
                "start": 1486396127603,
                "end": 1486396128640
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 452,
                "start": 1486396128641,
                "end": 1486396129093
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 926,
                "start": 1486396129094,
                "end": 1486396130020
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1044,
                "start": 1486396130021,
                "end": 1486396131065
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1383,
                "start": 1486396131066,
                "end": 1486396132449
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 105,
                "start": 1486396132451,
                "end": 1486396132556
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 5080,
                "start": 1486396132627,
                "end": 1486396137707
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 957,
                "start": 1486396137708,
                "end": 1486396138665
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 438,
                "start": 1486396138666,
                "end": 1486396139104
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 786,
                "start": 1486396139105,
                "end": 1486396139891
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 922,
                "start": 1486396139892,
                "end": 1486396140814
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1348,
                "start": 1486396140815,
                "end": 1486396142163
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 84,
                "start": 1486396142164,
                "end": 1486396142248
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom ApiKey {InvalidApiKey123}",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3663,
              "start": 1486396142315,
              "end": 1486396145978
            },
            {
              "step": "And enter custom ApiKey {InvalidApiKey123}",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
              "durationInMillis": 593,
              "start": 1486396145980,
              "end": 1486396146573
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 134,
              "start": 1486396146574,
              "end": 1486396146708
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 389,
              "start": 1486396146709,
              "end": 1486396147098
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1486396147099,
              "end": 1486396147123
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396147123,
              "end": 1486396147124
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom ApiKey {InvalidApiKey123}",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom EventId \"invalidEventId123\"",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 5122,
              "start": 1486396147187,
              "end": 1486396152309
            },
            {
              "step": "And enter custom EventId \"invalidEventId123\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
              "durationInMillis": 420,
              "start": 1486396152311,
              "end": 1486396152731
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 87,
              "start": 1486396152732,
              "end": 1486396152819
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 505,
              "start": 1486396152820,
              "end": 1486396153325
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26,
              "start": 1486396153326,
              "end": 1486396153352
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396153352,
              "end": 1486396153353
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom EventId \"invalidEventId123\"",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then the required fields are not empty and have default values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 4359,
              "start": 1486396153422,
              "end": 1486396157781
            },
            {
              "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "durationInMillis": 319,
              "start": 1486396157781,
              "end": 1486396158100
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1486396158101,
              "end": 1486396158126
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396158126,
              "end": 1486396158127
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then the required fields are not empty and have default values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|apiKey |keyWord|zipCode|city |attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York |333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "apiKey",
            "keyWord",
            "zipCode",
            "city",
            "attractionId",
            "venueId",
            "promoterId",
            "source",
            "countryCode",
            "classificationName",
            "eventCount"
          ],
          "data": [
            [
              [
                "apiKey",
                "apikeys"
              ],
              [
                "keyWord",
                "adele"
              ],
              [
                "zipCode",
                "90015"
              ],
              [
                "city",
                "York"
              ],
              [
                "attractionId",
                "333444"
              ],
              [
                "venueId",
                "222111"
              ],
              [
                "promoterId",
                "9999"
              ],
              [
                "source",
                "ticketmaster"
              ],
              [
                "countryCode",
                "Canada"
              ],
              [
                "classificationName",
                "movies"
              ],
              [
                "eventCount",
                "50"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "And store all fields values on the Event Discovery Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "apiKey",
              "apikeys"
            ],
            [
              "keyWord",
              "adele"
            ],
            [
              "zipCode",
              "90015"
            ],
            [
              "city",
              "York"
            ],
            [
              "attractionId",
              "333444"
            ],
            [
              "venueId",
              "222111"
            ],
            [
              "promoterId",
              "9999"
            ],
            [
              "source",
              "ticketmaster"
            ],
            [
              "countryCode",
              "Canada"
            ],
            [
              "classificationName",
              "movies"
            ],
            [
              "eventCount",
              "50"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5540,
                "start": 1486396158194,
                "end": 1486396163734
              },
              {
                "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                "durationInMillis": 7514,
                "start": 1486396163734,
                "end": 1486396171248
              },
              {
                "step": "And store all fields values on the Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                "durationInMillis": 560,
                "start": 1486396171253,
                "end": 1486396171813
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 893,
                "start": 1486396171814,
                "end": 1486396172707
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1470,
                "start": 1486396172708,
                "end": 1486396174178
              },
              {
                "step": "And embedded html code contains stored values on the Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
                "durationInMillis": 1130,
                "start": 1486396174179,
                "end": 1486396175309
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiKey |keyWord|zipCode|city |attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York |333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiKey",
                "keyWord",
                "zipCode",
                "city",
                "attractionId",
                "venueId",
                "promoterId",
                "source",
                "countryCode",
                "classificationName",
                "eventCount"
              ],
              "data": [
                [
                  [
                    "apiKey",
                    "apikeys"
                  ],
                  [
                    "keyWord",
                    "adele"
                  ],
                  [
                    "zipCode",
                    "90015"
                  ],
                  [
                    "city",
                    "York"
                  ],
                  [
                    "attractionId",
                    "333444"
                  ],
                  [
                    "venueId",
                    "222111"
                  ],
                  [
                    "promoterId",
                    "9999"
                  ],
                  [
                    "source",
                    "ticketmaster"
                  ],
                  [
                    "countryCode",
                    "Canada"
                  ],
                  [
                    "classificationName",
                    "movies"
                  ],
                  [
                    "eventCount",
                    "50"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "zipCode",
            "countryName"
          ],
          "data": [
            [
              [
                "zipCode",
                "NW1"
              ],
              [
                "countryName",
                "United Kingdom"
              ]
            ],
            [
              [
                "zipCode",
                "40104"
              ],
              [
                "countryName",
                "United States"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
          "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "zipCode",
              "NW1"
            ],
            [
              "countryName",
              "United Kingdom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5000,
                "start": 1486396175384,
                "end": 1486396180384
              },
              {
                "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟NW1｠ on Event Discovery Widget Page",
                "durationInMillis": 999,
                "start": 1486396180385,
                "end": 1486396181384
              },
              {
                "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country Field contains appropriate value ｟United Kingdom｠ on Event Discovery Widget Page",
                "durationInMillis": 1546,
                "start": 1486396181385,
                "end": 1486396182931
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          }
        },
        {
          "parameters": [
            [
              "zipCode",
              "40104"
            ],
            [
              "countryName",
              "United States"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4441,
                "start": 1486396182998,
                "end": 1486396187439
              },
              {
                "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟40104｠ on Event Discovery Widget Page",
                "durationInMillis": 968,
                "start": 1486396187440,
                "end": 1486396188408
              },
              {
                "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country Field contains appropriate value ｟United States｠ on Event Discovery Widget Page",
                "durationInMillis": 1557,
                "start": 1486396188409,
                "end": 1486396189966
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "keyword"
          ],
          "data": [
            [
              [
                "keyword",
                "ADELE"
              ]
            ],
            [
              [
                "keyword",
                "STING"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword <keyword> on Event Discovery Widget page",
          "Then found events contains <keyword> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "keyword",
              "ADELE"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5344,
                "start": 1486396190032,
                "end": 1486396195376
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 300,
                "start": 1486396195377,
                "end": 1486396195677
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 2500,
                "start": 1486396195677,
                "end": 1486396198177
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "keyword",
              "STING"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4838,
                "start": 1486396198245,
                "end": 1486396203083
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 513,
                "start": 1486396203084,
                "end": 1486396203597
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "Then found events contains <keyword> on Event Discovery Widget page",
                  "cause": {
                    "@class": "java.lang.AssertionError",
                    "detailMessage": "Poster windows does not contains STING, but has next text: NO LONGER ON SALE FOR WEB",
                    "stackTrace": [
                      "org.junit.Assert.fail(Assert.java:88)",
                      "org.junit.Assert.assertTrue(Assert.java:41)",
                      "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps.checkThatFoundEventsContainsText(PD_Widget_EventDiscoverySteps.java:79)",
                      "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps$$EnhancerByCGLIB$$d6591bd9.CGLIB$checkThatFoundEventsContainsText$9(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps$$EnhancerByCGLIB$$d6591bd9$$FastClassByCGLIB$$1d5c1876.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_EventDiscoverySteps$$EnhancerByCGLIB$$d6591bd9.checkThatFoundEventsContainsText(<generated>)",
                      "bla.tm.definitions.site.widgets.EventDiscoveryWidgetDefinition.checkThatFoundEventsContainsText(EventDiscoveryWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ]
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "1b430eff-7244-4073-b81e-ed838a557ed4"
                },
                "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 3922,
                "start": 1486396203598,
                "end": 1486396207520
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|\n| 1   |\n| 100 |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value"
          ],
          "data": [
            [
              [
                "value",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals or less than Event Count <value>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4396,
                "start": 1486396208093,
                "end": 1486396212489
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 3040,
                "start": 1486396212490,
                "end": 1486396215530
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                "durationInMillis": 49,
                "start": 1486396215531,
                "end": 1486396215580
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4283,
                "start": 1486396215645,
                "end": 1486396219928
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 3047,
                "start": 1486396219929,
                "end": 1486396222976
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                "durationInMillis": 1285,
                "start": 1486396222977,
                "end": 1486396224262
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        }
      ],
      "status": "NOT_PERFORMED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value",
            "actualValue"
          ],
          "data": [
            [
              [
                "value",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ],
              [
                "actualValue",
                "100"
              ]
            ],
            [
              [
                "value",
                "101"
              ],
              [
                "actualValue",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals Event Count <actualValue>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6942,
                "start": 1486396224333,
                "end": 1486396231275
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 2693,
                "start": 1486396231276,
                "end": 1486396233969
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 69,
                "start": 1486396233970,
                "end": 1486396234039
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6127,
                "start": 1486396234102,
                "end": 1486396240229
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 2584,
                "start": 1486396240230,
                "end": 1486396242814
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 82,
                "start": 1486396242815,
                "end": 1486396242897
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 3987,
                "start": 1486396242961,
                "end": 1486396246948
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2635,
                "start": 1486396246949,
                "end": 1486396249584
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 639,
                "start": 1486396249586,
                "end": 1486396250225
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "101"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5015,
                "start": 1486396250293,
                "end": 1486396255308
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                "durationInMillis": 2748,
                "start": 1486396255308,
                "end": 1486396258056
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 772,
                "start": 1486396258057,
                "end": 1486396258829
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "setValue",
            "actualValue"
          ],
          "data": [
            [
              [
                "setValue",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "19999"
              ],
              [
                "actualValue",
                "19999"
              ]
            ],
            [
              [
                "setValue",
                "20000"
              ],
              [
                "actualValue",
                "19999"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change value of ZipCode 90015 on Event Discovery Widget Page",
          "When set Radius <setValue> on Event Discovery Widget page",
          "Then Radius value is <actualValue> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "setValue",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4797,
                "start": 1486396258899,
                "end": 1486396263696
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 993,
                "start": 1486396263696,
                "end": 1486396264689
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 745,
                "start": 1486396264690,
                "end": 1486396265435
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 73,
                "start": 1486396265435,
                "end": 1486396265508
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 3992,
                "start": 1486396265574,
                "end": 1486396269566
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1110,
                "start": 1486396269567,
                "end": 1486396270677
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 679,
                "start": 1486396270678,
                "end": 1486396271357
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 99,
                "start": 1486396271357,
                "end": 1486396271456
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "19999"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5016,
                "start": 1486396271523,
                "end": 1486396276539
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1089,
                "start": 1486396276540,
                "end": 1486396277629
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 658,
                "start": 1486396277630,
                "end": 1486396278288
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 66,
                "start": 1486396278288,
                "end": 1486396278354
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "20000"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5048,
                "start": 1486396278421,
                "end": 1486396283469
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 999,
                "start": 1486396283470,
                "end": 1486396284469
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟20000｠ on Event Discovery Widget page",
                "durationInMillis": 796,
                "start": 1486396284470,
                "end": 1486396285266
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 63,
                "start": 1486396285267,
                "end": 1486396285330
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And store all fields values on the Event Discovery Widget page",
          "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "When click reset button",
          "Then all fields have been reseted to defaults on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 3691,
              "start": 1486396285402,
              "end": 1486396289093
            },
            {
              "step": "And store all fields values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
              "durationInMillis": 746,
              "start": 1486396289094,
              "end": 1486396289840
            },
            {
              "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
              "durationInMillis": 5823,
              "start": 1486396289840,
              "end": 1486396295663
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 2824,
              "start": 1486396295666,
              "end": 1486396298490
            },
            {
              "step": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
              "durationInMillis": 423,
              "start": 1486396298491,
              "end": 1486396298914
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1486396298915,
              "end": 1486396298938
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396298938,
              "end": 1486396298939
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "And store all fields values on the Event Discovery Widget page",
            "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
            "When click reset button",
            "Then all fields have been reseted to defaults on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 5923,
              "start": 1486396299007,
              "end": 1486396304930
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 230,
              "start": 1486396304931,
              "end": 1486396305161
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 617,
              "start": 1486396305161,
              "end": 1486396305778
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1486396305778,
              "end": 1486396305803
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396305803,
              "end": 1486396305803
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5319,
                "start": 1486396305870,
                "end": 1486396311189
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 762,
                "start": 1486396311189,
                "end": 1486396311951
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 508,
                "start": 1486396311952,
                "end": 1486396312460
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 742,
                "start": 1486396312461,
                "end": 1486396313203
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 879,
                "start": 1486396313203,
                "end": 1486396314082
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1418,
                "start": 1486396314082,
                "end": 1486396315500
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 218,
                "start": 1486396315501,
                "end": 1486396315719
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4744,
                "start": 1486396315784,
                "end": 1486396320528
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 729,
                "start": 1486396320528,
                "end": 1486396321257
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 379,
                "start": 1486396321258,
                "end": 1486396321637
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 710,
                "start": 1486396321637,
                "end": 1486396322347
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1364,
                "start": 1486396322348,
                "end": 1486396323712
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1306,
                "start": 1486396323712,
                "end": 1486396325018
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 146,
                "start": 1486396325018,
                "end": 1486396325164
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 3634,
                "start": 1486396325230,
                "end": 1486396328864
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 949,
                "start": 1486396328865,
                "end": 1486396329814
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 478,
                "start": 1486396329815,
                "end": 1486396330293
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 684,
                "start": 1486396330293,
                "end": 1486396330977
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 774,
                "start": 1486396330978,
                "end": 1486396331752
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1330,
                "start": 1486396331752,
                "end": 1486396333082
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 57,
                "start": 1486396333083,
                "end": 1486396333140
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4805,
                "start": 1486396333206,
                "end": 1486396338011
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 764,
                "start": 1486396338012,
                "end": 1486396338776
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 380,
                "start": 1486396338777,
                "end": 1486396339157
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 718,
                "start": 1486396339158,
                "end": 1486396339876
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 885,
                "start": 1486396339877,
                "end": 1486396340762
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1385,
                "start": 1486396340763,
                "end": 1486396342148
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 81,
                "start": 1486396342148,
                "end": 1486396342229
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6387,
                "start": 1486396342293,
                "end": 1486396348680
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 905,
                "start": 1486396348681,
                "end": 1486396349586
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 401,
                "start": 1486396349587,
                "end": 1486396349988
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 693,
                "start": 1486396349989,
                "end": 1486396350682
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1045,
                "start": 1486396350682,
                "end": 1486396351727
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1376,
                "start": 1486396351728,
                "end": 1486396353104
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 129,
                "start": 1486396353105,
                "end": 1486396353234
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
          "Then the event message is shown \"Here other options for you.\""
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 3259,
              "start": 1486396353306,
              "end": 1486396356565
            },
            {
              "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
              "durationInMillis": 589,
              "start": 1486396356566,
              "end": 1486396357155
            },
            {
              "step": "Then the event message is shown \"Here other options for you.\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
              "durationInMillis": 1001,
              "start": 1486396357156,
              "end": 1486396358157
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1486396358158,
              "end": 1486396358183
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396358183,
              "end": 1486396358183
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
            "Then the event message is shown \"Here other options for you.\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Check that Feedback widget Elements are shown",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And Feedback widget is not shown",
          "When click Feedback button of Tutorials Widgets page",
          "Then Feedback widget elements are shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1694,
              "start": 1486396358252,
              "end": 1486396359946
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And Feedback widget is not shown",
              "durationInMillis": 569,
              "start": 1486396359946,
              "end": 1486396360515
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 80,
              "start": 1486396360516,
              "end": 1486396360596
            },
            {
              "step": "Then Feedback widget elements are shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Feedback widget elements are shown",
              "durationInMillis": 990,
              "start": 1486396360597,
              "end": 1486396361587
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1486396361587,
              "end": 1486396361609
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396361609,
              "end": 1486396361610
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Check that Feedback widget Elements are shown",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And Feedback widget is not shown",
            "When click Feedback button of Tutorials Widgets page",
            "Then Feedback widget elements are shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget Close button",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When click Feedback button of Tutorials Widgets page",
          "Then click close button of Feedback widget",
          "And Feedback widget is not shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 2099,
              "start": 1486396361672,
              "end": 1486396363771
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 130,
              "start": 1486396363772,
              "end": 1486396363902
            },
            {
              "step": "Then click close button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then click close button of Feedback widget",
              "durationInMillis": 456,
              "start": 1486396363903,
              "end": 1486396364359
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And Feedback widget is not shown",
              "durationInMillis": 519,
              "start": 1486396364360,
              "end": 1486396364879
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1486396364879,
              "end": 1486396364898
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396364898,
              "end": 1486396364899
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget Close button",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "When click Feedback button of Tutorials Widgets page",
            "Then click close button of Feedback widget",
            "And Feedback widget is not shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for NAME field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Name are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1976,
              "start": 1486396364961,
              "end": 1486396366937
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 123,
              "start": 1486396366937,
              "end": 1486396367060
            },
            {
              "step": "When all fields except Name are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Name are populated",
              "durationInMillis": 427,
              "start": 1486396367061,
              "end": 1486396367488
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click send button of Feedback widget",
              "durationInMillis": 96,
              "start": 1486396367489,
              "end": 1486396367585
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then error notification is shown for Feedback widget",
              "durationInMillis": 26,
              "start": 1486396367585,
              "end": 1486396367611
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1486396367612,
              "end": 1486396367632
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396367632,
              "end": 1486396367632
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for NAME field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Name are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for Email field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Email are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1971,
              "start": 1486396367696,
              "end": 1486396369667
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 133,
              "start": 1486396369668,
              "end": 1486396369801
            },
            {
              "step": "When all fields except Email are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Email are populated",
              "durationInMillis": 538,
              "start": 1486396369802,
              "end": 1486396370340
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click send button of Feedback widget",
              "durationInMillis": 107,
              "start": 1486396370341,
              "end": 1486396370448
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then error notification is shown for Feedback widget",
              "durationInMillis": 36,
              "start": 1486396370449,
              "end": 1486396370485
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1486396370485,
              "end": 1486396370523
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396370523,
              "end": 1486396370524
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for Email field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Email are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "Then the required fields are not empty on the Map Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 5055,
              "start": 1486396370593,
              "end": 1486396375648
            },
            {
              "step": "Then the required fields are not empty on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Map Widget page",
              "durationInMillis": 158,
              "start": 1486396375648,
              "end": 1486396375806
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27,
              "start": 1486396375807,
              "end": 1486396375834
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396375834,
              "end": 1486396375835
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "Then the required fields are not empty on the Map Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "And store all fields values on the Map Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Map Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4130,
              "start": 1486396375900,
              "end": 1486396380030
            },
            {
              "step": "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change all possible fields on the Map Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
              "durationInMillis": 6291,
              "start": 1486396380031,
              "end": 1486396386322
            },
            {
              "step": "And store all fields values on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Map Widget page",
              "durationInMillis": 448,
              "start": 1486396386324,
              "end": 1486396386772
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 754,
              "start": 1486396386773,
              "end": 1486396387527
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1371,
              "start": 1486396387528,
              "end": 1486396388899
            },
            {
              "step": "And embedded html code contains stored values on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values on the Map Widget page",
              "durationInMillis": 662,
              "start": 1486396388899,
              "end": 1486396389561
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1486396389561,
              "end": 1486396389584
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396389584,
              "end": 1486396389585
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
            "And store all fields values on the Map Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values on the Map Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And store values of: apiKey,keyword,zipCode",
          "And change values for: apiKey,keyword,zipCode",
          "When click reset button",
          "Then values equals to stored values of fields: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4058,
              "start": 1486396389648,
              "end": 1486396393706
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 303,
              "start": 1486396393707,
              "end": 1486396394010
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2246,
              "start": 1486396394011,
              "end": 1486396396257
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 2707,
              "start": 1486396396258,
              "end": 1486396398965
            },
            {
              "step": "Then values equals to stored values of fields: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values equals to stored values of fields: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 108,
              "start": 1486396398966,
              "end": 1486396399074
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1486396399075,
              "end": 1486396399109
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396399109,
              "end": 1486396399110
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And store values of: apiKey,keyword,zipCode",
            "And change values for: apiKey,keyword,zipCode",
            "When click reset button",
            "Then values equals to stored values of fields: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And store values of: apiKey,keyword,zipCode",
          "And change values for: apiKey,keyword,zipCode",
          "When click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4983,
              "start": 1486396399181,
              "end": 1486396404164
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 190,
              "start": 1486396404165,
              "end": 1486396404355
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2143,
              "start": 1486396404356,
              "end": 1486396406499
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 2708,
              "start": 1486396406500,
              "end": 1486396409208
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 865,
              "start": 1486396409209,
              "end": 1486396410074
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1841,
              "start": 1486396410075,
              "end": 1486396411916
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 174,
              "start": 1486396411917,
              "end": 1486396412091
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18,
              "start": 1486396412091,
              "end": 1486396412109
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396412109,
              "end": 1486396412109
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And store values of: apiKey,keyword,zipCode",
            "And change values for: apiKey,keyword,zipCode",
            "When click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 5498,
              "start": 1486396412171,
              "end": 1486396417669
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 246,
              "start": 1486396417670,
              "end": 1486396417916
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 755,
              "start": 1486396417917,
              "end": 1486396418672
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1486396418673,
              "end": 1486396418711
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396418711,
              "end": 1486396418712
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 7174,
              "start": 1486396418779,
              "end": 1486396425953
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 299,
              "start": 1486396425954,
              "end": 1486396426253
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 500,
              "start": 1486396426254,
              "end": 1486396426754
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1486396426754,
              "end": 1486396426779
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396426779,
              "end": 1486396426779
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then Summary widget is shown for Getting Started page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 4292,
              "start": 1486396426853,
              "end": 1486396431145
            },
            {
              "step": "Then Summary widget is shown for Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Getting Started page",
              "durationInMillis": 172,
              "start": 1486396431146,
              "end": 1486396431318
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 258,
              "start": 1486396431319,
              "end": 1486396431577
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396431577,
              "end": 1486396431578
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then Summary widget is shown for Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then Summary widget is shown for Home page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2795,
              "start": 1486396431689,
              "end": 1486396434484
            },
            {
              "step": "Then Summary widget is shown for Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Home page",
              "durationInMillis": 92,
              "start": 1486396434510,
              "end": 1486396434602
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 137,
              "start": 1486396434602,
              "end": 1486396434739
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1486396434739,
              "end": 1486396434739
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then Summary widget is shown for Home page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then Summary widget is shown for API Explorer page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 4951,
              "start": 1486396434803,
              "end": 1486396439754
            },
            {
              "step": "Then Summary widget is shown for API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for API Explorer page",
              "durationInMillis": 373,
              "start": 1486396439755,
              "end": 1486396440128
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 65,
              "start": 1486396440129,
              "end": 1486396440194
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1486396440194,
              "end": 1486396440195
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then Summary widget is shown for API Explorer page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    }
  ]
}}